{
  "contractName": "photoToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "photos",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "photo_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "originality",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "photo_id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "originality",
              "type": "bool"
            }
          ],
          "internalType": "struct photoToken.Photo",
          "name": "_photo",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerof",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "photo_id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "originality",
              "type": "bool"
            }
          ],
          "internalType": "struct photoToken.Photo",
          "name": "_photo",
          "type": "tuple"
        }
      ],
      "name": "look_up",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "photo_id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "originality",
              "type": "bool"
            }
          ],
          "internalType": "struct photoToken.Photo",
          "name": "_photo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"photo_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"internalType\":\"struct photoToken.Photo\",\"name\":\"_photo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"photo_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"internalType\":\"struct photoToken.Photo\",\"name\":\"_photo\",\"type\":\"tuple\"}],\"name\":\"look_up\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"photo_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"internalType\":\"struct photoToken.Photo\",\"name\":\"_photo\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerof\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"photos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"photo_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |=== Requirements: - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol\":\"photoToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/ERC721.sol\":{\"keccak256\":\"0x754cb1fb86eddfad7fc1ab12bb01f56f15211351b4f8626ace884c5744b801e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac6784f0a3115a1e81bfefe5c322ac086177b418dc9e18222c8fdb45a77093d9\",\"dweb:/ipfs/QmVhMBDrGbvSyGB91PoJdtkCcBZp338PZfn1PLAKGZtSyR\"]},\"/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol\":{\"keccak256\":\"0xa625e2627b7a0809eabac9576b6f9b923c4f8879a705b5f1de9c30b2eea4fff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae741ea50874cec124e18a96dae176da96f614b43e56380de82b5c3e463ca345\",\"dweb:/ipfs/QmWdeVj3QjqoKhUQmnKPnpTTnda56aGQk1QykfNA6UpBT2\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101405760003560e01c80636c0360eb116100b6578063b88d4fde1161006f578063b88d4fde146104a9578063bdebb525146104d2578063c87b56dd1461050f578063d8b2d7141461054c578063e985e9c51461057c578063ee21e10b146105b957610140565b80636c0360eb1461038457806370a08231146103af57806395d89b41146103ec5780639d6ff9d014610417578063a22cb46514610440578063af2a5d6f1461046957610140565b806323b872dd1161010857806323b872dd1461023e5780632f745c59146102675780633d64125b146102a457806342842e0e146102e15780634f6ccce71461030a5780636352211e1461034757610140565b806301ffc9a71461014557806306fdde0314610182578063081812fc146101ad578063095ea7b3146101ea57806318160ddd14610213575b600080fd5b34801561015157600080fd5b5061016c60048036038101906101679190612612565b6105f6565b6040516101799190612f6a565b60405180910390f35b34801561018e57600080fd5b5061019761065d565b6040516101a49190612f85565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf91906126f9565b6106ff565b6040516101e19190612f03565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c91906125d6565b610784565b005b34801561021f57600080fd5b5061022861089c565b60405161023591906131c7565b60405180910390f35b34801561024a57600080fd5b50610265600480360381019061026091906124d0565b6108ad565b005b34801561027357600080fd5b5061028e600480360381019061028991906125d6565b61090d565b60405161029b91906131c7565b60405180910390f35b3480156102b057600080fd5b506102cb60048036038101906102c6919061246b565b610968565b6040516102d891906131c7565b60405180910390f35b3480156102ed57600080fd5b50610308600480360381019061030391906124d0565b61097a565b005b34801561031657600080fd5b50610331600480360381019061032c91906126f9565b61099a565b60405161033e91906131c7565b60405180910390f35b34801561035357600080fd5b5061036e600480360381019061036991906126f9565b6109bd565b60405161037b9190612f03565b60405180910390f35b34801561039057600080fd5b506103996109f4565b6040516103a69190612f85565b60405180910390f35b3480156103bb57600080fd5b506103d660048036038101906103d1919061246b565b610a96565b6040516103e391906131c7565b60405180910390f35b3480156103f857600080fd5b50610401610b55565b60405161040e9190612f85565b60405180910390f35b34801561042357600080fd5b5061043e60048036038101906104399190612664565b610bf7565b005b34801561044c57600080fd5b506104676004803603810190610462919061259a565b610d22565b005b34801561047557600080fd5b50610490600480360381019061048b91906126f9565b610ea3565b6040516104a094939291906131e2565b60405180910390f35b3480156104b557600080fd5b506104d060048036038101906104cb919061251f565b610f85565b005b3480156104de57600080fd5b506104f960048036038101906104f491906126f9565b610fe7565b6040516105069190612f03565b60405180910390f35b34801561051b57600080fd5b50610536600480360381019061053191906126f9565b610ff9565b6040516105439190612f85565b60405180910390f35b610566600480360381019061056191906126a5565b611184565b6040516105739190612f6a565b60405180910390f35b34801561058857600080fd5b506105a3600480360381019061059e9190612494565b61129a565b6040516105b09190612f6a565b60405180910390f35b3480156105c557600080fd5b506105e060048036038101906105db9190612664565b61132e565b6040516105ed91906131c7565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b5050505050905090565b600061070a826113c2565b610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090613127565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061078f826109bd565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f790613187565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661081f6113df565b73ffffffffffffffffffffffffffffffffffffffff16148061084e575061084d816108486113df565b61129a565b5b61088d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610884906130a7565b60405180910390fd5b61089783836113e7565b505050565b60006108a860026114a0565b905090565b6108be6108b86113df565b826114b5565b6108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f4906131a7565b60405180910390fd5b610908838383611593565b505050565b600061096082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117aa90919063ffffffff16565b905092915050565b600061097382610a96565b9050919050565b61099583838360405180602001604052806000815250610f85565b505050565b6000806109b18360026117c490919063ffffffff16565b50905080915050919050565b60006109ed8260405180606001604052806029815260200161344c6029913960026117f39092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a8c5780601f10610a6157610100808354040283529160200191610a8c565b820191906000526020600020905b815481529060010190602001808311610a6f57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe906130c7565b60405180910390fd5b610b4e600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611812565b9050919050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b5050505050905090565b60001515600c60008360000151815260200190815260200160002060009054906101000a900460ff16151514610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990612fc7565b60405180910390fd5b600a819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001019080519060200190610cb4929190612229565b506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050506001600c60008360000151815260200190815260200160002060006101000a81548160ff021916908315150217905550610d1f338260000151611827565b50565b610d2a6113df565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8f90613047565b60405180910390fd5b8060056000610da56113df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e526113df565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e979190612f6a565b60405180910390a35050565b600a8181548110610eb057fe5b9060005260206000209060040201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f625780601f10610f3757610100808354040283529160200191610f62565b820191906000526020600020905b815481529060010190602001808311610f4557829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b610f96610f906113df565b836114b5565b610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc906131a7565b60405180910390fd5b610fe1848484846119b5565b50505050565b6000610ff2826109bd565b9050919050565b6060611004826113c2565b611043576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103a90613167565b60405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110ec5780601f106110c1576101008083540402835291602001916110ec565b820191906000526020600020905b8154815290600101906020018083116110cf57829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561111b578091505061117f565b60008151111561115057600981604051602001611139929190612edf565b60405160208183030381529060405291505061117f565b600961115b84611a11565b60405160200161116c929190612edf565b6040516020818303038152906040529150505b919050565b6000806111908461132e565b90508083146111d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cb90613067565b60405180910390fd5b60006111e385600001516109bd565b905083600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555083600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555061128e81338760000151611593565b60019250505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060009050600083604001511015801561134f5750600a836040015111155b1561135d57603290506113a1565b600a836040015111801561137657506014836040015111155b1561138457606490506113a0565b60148360400151111561139a5760c8905061139f565b600090505b5b5b600115158360600151151514156113b9576002810290505b80915050919050565b60006113d8826002611b5890919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661145a836109bd565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006114ae82600001611b72565b9050919050565b60006114c0826113c2565b6114ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f690613087565b60405180910390fd5b600061150a836109bd565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061157957508373ffffffffffffffffffffffffffffffffffffffff16611561846106ff565b73ffffffffffffffffffffffffffffffffffffffff16145b8061158a5750611589818561129a565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166115b3826109bd565b73ffffffffffffffffffffffffffffffffffffffff1614611609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160090613147565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167090613027565b60405180910390fd5b611684838383611b83565b61168f6000826113e7565b6116e081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b8890919063ffffffff16565b5061173281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ba290919063ffffffff16565b5061174981836002611bbc9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006117b98360000183611bf1565b60001c905092915050565b6000806000806117d78660000186611c5e565b915091508160001c8160001c8090509350935050509250929050565b6000611806846000018460001b84611ce1565b60001c90509392505050565b600061182082600001611d72565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188e90613107565b60405180910390fd5b6118a0816113c2565b156118e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d790613007565b60405180910390fd5b6118ec60008383611b83565b61193d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ba290919063ffffffff16565b5061195481836002611bbc9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6119c0848484611593565b6119cc84848484611d83565b611a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0290612fe7565b60405180910390fd5b50505050565b60606000821415611a59576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611b53565b600082905060005b60008214611a83578080600101915050600a8281611a7b57fe5b049150611a61565b60608167ffffffffffffffff81118015611a9c57600080fd5b506040519080825280601f01601f191660200182016040528015611acf5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611b4b57600a8481611af057fe5b0660300160f81b82828060019003935081518110611b0a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611b4357fe5b049350611ade565b819450505050505b919050565b6000611b6a836000018360001b611f64565b905092915050565b600081600001805490509050919050565b505050565b6000611b9a836000018360001b611f87565b905092915050565b6000611bb4836000018360001b61206f565b905092915050565b6000611be8846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6120df565b90509392505050565b600081836000018054905011611c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3390612fa7565b60405180910390fd5b826000018281548110611c4b57fe5b9060005260206000200154905092915050565b60008082846000018054905011611caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca1906130e7565b60405180910390fd5b6000846000018481548110611cbb57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3a9190612f85565b60405180910390fd5b50846000016001820381548110611d5657fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000611da48473ffffffffffffffffffffffffffffffffffffffff166121bb565b611db15760019050611f5c565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b611ddc6113df565b898888604051602401611df29493929190612f1e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611e5c9190612ec8565b6000604051808303816000865af19150503d8060008114611e99576040519150601f19603f3d011682016040523d82523d6000602084013e611e9e565b606091505b509150915081611ef657600081511115611ebb5780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eed90612fe7565b60405180910390fd5b600081806020019051810190611f0c919061263b565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146120635760006001820390506000600186600001805490500390506000866000018281548110611fd257fe5b9060005260206000200154905080876000018481548110611fef57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061202757fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612069565b60009150505b92915050565b600061207b8383612206565b6120d45782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506120d9565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415612186578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506121b4565b8285600001600183038154811061219957fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156121fd57506000801b8214155b92505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061226a57805160ff1916838001178555612298565b82800160010185558215612298579182015b8281111561229757825182559160200191906001019061227c565b5b5090506122a591906122a9565b5090565b6122cb91905b808211156122c75760008160009055506001016122af565b5090565b90565b6000813590506122dd816133ef565b92915050565b6000813590506122f281613406565b92915050565b6000813590506123078161341d565b92915050565b60008151905061231c8161341d565b92915050565b600082601f83011261233357600080fd5b81356123466123418261325b565b61322e565b9150808252602083016020830185838301111561236257600080fd5b61236d83828461339c565b50505092915050565b600082601f83011261238757600080fd5b813561239a61239582613287565b61322e565b915080825260208301602083018583830111156123b657600080fd5b6123c183828461339c565b50505092915050565b6000608082840312156123dc57600080fd5b6123e6608061322e565b905060006123f684828501612456565b600083015250602082013567ffffffffffffffff81111561241657600080fd5b61242284828501612376565b602083015250604061243684828501612456565b604083015250606061244a848285016122e3565b60608301525092915050565b60008135905061246581613434565b92915050565b60006020828403121561247d57600080fd5b600061248b848285016122ce565b91505092915050565b600080604083850312156124a757600080fd5b60006124b5858286016122ce565b92505060206124c6858286016122ce565b9150509250929050565b6000806000606084860312156124e557600080fd5b60006124f3868287016122ce565b9350506020612504868287016122ce565b925050604061251586828701612456565b9150509250925092565b6000806000806080858703121561253557600080fd5b6000612543878288016122ce565b9450506020612554878288016122ce565b935050604061256587828801612456565b925050606085013567ffffffffffffffff81111561258257600080fd5b61258e87828801612322565b91505092959194509250565b600080604083850312156125ad57600080fd5b60006125bb858286016122ce565b92505060206125cc858286016122e3565b9150509250929050565b600080604083850312156125e957600080fd5b60006125f7858286016122ce565b925050602061260885828601612456565b9150509250929050565b60006020828403121561262457600080fd5b6000612632848285016122f8565b91505092915050565b60006020828403121561264d57600080fd5b600061265b8482850161230d565b91505092915050565b60006020828403121561267657600080fd5b600082013567ffffffffffffffff81111561269057600080fd5b61269c848285016123ca565b91505092915050565b600080604083850312156126b857600080fd5b600083013567ffffffffffffffff8111156126d257600080fd5b6126de858286016123ca565b92505060206126ef85828601612456565b9150509250929050565b60006020828403121561270b57600080fd5b600061271984828501612456565b91505092915050565b61272b81613328565b82525050565b61273a81613316565b82525050565b6127498161333a565b82525050565b600061275a826132c8565b61276481856132de565b93506127748185602086016133ab565b61277d816133de565b840191505092915050565b6000612793826132c8565b61279d81856132ef565b93506127ad8185602086016133ab565b80840191505092915050565b60006127c4826132d3565b6127ce81856132fa565b93506127de8185602086016133ab565b6127e7816133de565b840191505092915050565b60006127fd826132d3565b612807818561330b565b93506128178185602086016133ab565b80840191505092915050565b6000815460018116600081146128405760018114612865576128a9565b607f6002830416612851818761330b565b955060ff19831686528086019350506128a9565b60028204612873818761330b565b955061287e856132b3565b60005b828110156128a057815481890152600182019150602081019050612881565b82880195505050505b505092915050565b60006128be6022836132fa565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129246017836132fa565b91507f70686f746f5f696420616c7265616479206578697374730000000000000000006000830152602082019050919050565b60006129646032836132fa565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006129ca601c836132fa565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612a0a6024836132fa565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a706019836132fa565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612ab06014836132fa565b91507f496e636f72726563742076616c75652073656e740000000000000000000000006000830152602082019050919050565b6000612af0602c836132fa565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612b566038836132fa565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612bbc602a836132fa565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c226022836132fa565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c886020836132fa565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612cc8602c836132fa565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612d2e6029836132fa565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d94602f836132fa565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000612dfa6021836132fa565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e606031836132fa565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b612ec281613392565b82525050565b6000612ed48284612788565b915081905092915050565b6000612eeb8285612823565b9150612ef782846127f2565b91508190509392505050565b6000602082019050612f186000830184612731565b92915050565b6000608082019050612f336000830187612722565b612f406020830186612731565b612f4d6040830185612eb9565b8181036060830152612f5f818461274f565b905095945050505050565b6000602082019050612f7f6000830184612740565b92915050565b60006020820190508181036000830152612f9f81846127b9565b905092915050565b60006020820190508181036000830152612fc0816128b1565b9050919050565b60006020820190508181036000830152612fe081612917565b9050919050565b6000602082019050818103600083015261300081612957565b9050919050565b60006020820190508181036000830152613020816129bd565b9050919050565b60006020820190508181036000830152613040816129fd565b9050919050565b6000602082019050818103600083015261306081612a63565b9050919050565b6000602082019050818103600083015261308081612aa3565b9050919050565b600060208201905081810360008301526130a081612ae3565b9050919050565b600060208201905081810360008301526130c081612b49565b9050919050565b600060208201905081810360008301526130e081612baf565b9050919050565b6000602082019050818103600083015261310081612c15565b9050919050565b6000602082019050818103600083015261312081612c7b565b9050919050565b6000602082019050818103600083015261314081612cbb565b9050919050565b6000602082019050818103600083015261316081612d21565b9050919050565b6000602082019050818103600083015261318081612d87565b9050919050565b600060208201905081810360008301526131a081612ded565b9050919050565b600060208201905081810360008301526131c081612e53565b9050919050565b60006020820190506131dc6000830184612eb9565b92915050565b60006080820190506131f76000830187612eb9565b818103602083015261320981866127b9565b90506132186040830185612eb9565b6132256060830184612740565b95945050505050565b6000604051905081810181811067ffffffffffffffff8211171561325157600080fd5b8060405250919050565b600067ffffffffffffffff82111561327257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561329e57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061332182613372565b9050919050565b600061333382613372565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156133c95780820151818401526020810190506133ae565b838111156133d8576000848401525b50505050565b6000601f19601f8301169050919050565b6133f881613316565b811461340357600080fd5b50565b61340f8161333a565b811461341a57600080fd5b50565b61342681613346565b811461343157600080fd5b50565b61343d81613392565b811461344857600080fd5b5056fe4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220a6e669522efbfaadf64cd00098dde9b28068541ab300c397a3849abd912e629864736f6c63430006090033",
  "immutableReferences": {},
  "sourceMap": "125:1814:2:-:0;;;392:49;;;;;;;;;;39121:365:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10081:40;9748:10;10100:20;;10081:18;;;:40;;:::i;:::-;39201:4;39193:5;:12;;;;;;;;;;;;:::i;:::-;;39225:6;39215:7;:16;;;;;;;;;;;;:::i;:::-;;39319:40;38399:10;39338:20;;39319:18;;;:40;;:::i;:::-;39369:49;38731:10;39388:29;;39369:18;;;:49;;:::i;:::-;39428:51;39104:10;39447:31;;39428:18;;;:51;;:::i;:::-;39121:365;;125:1814:2;;10812:198:0;10910:10;10895:25;;:11;:25;;;;;10887:66;;;;;;;;;;;;;;;;;;;;;;10999:4;10963:20;:33;10984:11;10963:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;10812:198;:::o;125:1814:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;;342:416;;542:2;531:9;527:18;519:26;;592:9;586:4;582:20;578:1;567:9;563:17;556:47;617:131;743:4;617:131;;;609:139;;513:245;;;;766:163;;881:6;876:3;869:19;918:4;913:3;909:14;894:29;;862:67;;;;;125:1814:2;;;;;;;",
  "deployedSourceMap": "125:1814:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10278:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;40392:90;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;45052:209;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;44386:381;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;43266:200;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;46763:300;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;42961:152;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;831:106:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;47712:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;43804:161;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;40120:167;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;42500:87;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;39690:211;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;40591:94;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;479:230:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;45560:290:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;279:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;48584:282:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;717:106:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;41528:740:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1505:429:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;46172:154:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1052:397:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10278:140:0;10355:4;10378:20;:33;10399:11;10378:33;;;;;;;;;;;;;;;;;;;;;;;;;;;10371:40;;10278:140;;;:::o;40392:90::-;40438:13;40470:5;40463:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40392:90;:::o;45052:209::-;45120:7;45147:16;45155:7;45147;:16::i;:::-;45139:73;;;;;;;;;;;;;;;;;;;;;;45230:15;:24;45246:7;45230:24;;;;;;;;;;;;;;;;;;;;;45223:31;;45052:209;;;:::o;44386:381::-;44466:13;44482:16;44490:7;44482;:16::i;:::-;44466:32;;44522:5;44516:11;;:2;:11;;;;44508:57;;;;;;;;;;;;;;;;;;;;;;44600:5;44584:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;44609:37;44626:5;44633:12;:10;:12::i;:::-;44609:16;:37::i;:::-;44584:62;44576:152;;;;;;;;;;;;;;;;;;;;;;44739:21;44748:2;44752:7;44739:8;:21::i;:::-;44386:381;;;:::o;43266:200::-;43319:7;43438:21;:12;:19;:21::i;:::-;43431:28;;43266:200;:::o;46763:300::-;46922:41;46941:12;:10;:12::i;:::-;46955:7;46922:18;:41::i;:::-;46914:103;;;;;;;;;;;;;;;;;;;;;;47028:28;47038:4;47044:2;47048:7;47028:9;:28::i;:::-;46763:300;;;:::o;42961:152::-;43050:7;43076:30;43100:5;43076:13;:20;43090:5;43076:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;43069:37;;42961:152;;;;:::o;831:106:2:-;886:7;913:16;923:5;913:9;:16::i;:::-;906:23;;831:106;;;:::o;47712:149:0:-;47815:39;47832:4;47838:2;47842:7;47815:39;;;;;;;;;;;;:16;:39::i;:::-;47712:149;;;:::o;43804:161::-;43871:7;43891:15;43912:22;43928:5;43912:12;:15;;:22;;;;:::i;:::-;43890:44;;;43951:7;43944:14;;;43804:161;;;:::o;40120:167::-;40184:7;40210:70;40227:7;40210:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;40203:77;;40120:167;;;:::o;42500:87::-;42540:13;42572:8;42565:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42500:87;:::o;39690:211::-;39754:7;39798:1;39781:19;;:5;:19;;;;39773:74;;;;;;;;;;;;;;;;;;;;;;39865:29;:13;:20;39879:5;39865:20;;;;;;;;;;;;;;;:27;:29::i;:::-;39858:36;;39690:211;;;:::o;40591:94::-;40639:13;40671:7;40664:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40591:94;:::o;479:230:2:-;567:5;534:38;;:12;:29;547:6;:15;;;534:29;;;;;;;;;;;;;;;;;;;;;:38;;;526:74;;;;;;;;;;;;;;;;;;;;;;605:6;617;605:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:4;629:12;:29;642:6;:15;;;629:29;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;670:34;676:10;688:6;:15;;;670:5;:34::i;:::-;479:230;:::o;45560:290:0:-;45674:12;:10;:12::i;:::-;45662:24;;:8;:24;;;;45654:62;;;;;;;;;;;;;;;;;;;;;;45772:8;45727:18;:32;45746:12;:10;:12::i;:::-;45727:32;;;;;;;;;;;;;;;:42;45760:8;45727:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;45824:8;45795:48;;45810:12;:10;:12::i;:::-;45795:48;;;45834:8;45795:48;;;;;;;;;;;;;;;45560:290;;:::o;279:21:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;48584:282:0:-;48715:41;48734:12;:10;:12::i;:::-;48748:7;48715:18;:41::i;:::-;48707:103;;;;;;;;;;;;;;;;;;;;;;48820:39;48834:4;48840:2;48844:7;48853:5;48820:13;:39::i;:::-;48584:282;;;;:::o;717:106:2:-;772:7;799:16;807:7;799;:16::i;:::-;792:23;;717:106;;;:::o;41528:740:0:-;41593:13;41626:16;41634:7;41626;:16::i;:::-;41618:76;;;;;;;;;;;;;;;;;;;;;;41705:23;41731:10;:19;41742:7;41731:19;;;;;;;;;;;41705:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41849:1;41829:8;41823:22;;;;;;;;;;;;;;;;:27;41819:74;;;41873:9;41866:16;;;;;41819:74;42021:1;42001:9;41995:23;:27;41991:110;;;42069:8;42079:9;42052:37;;;;;;;;;;;;;;;;;;;;;;;42038:52;;;;;41991:110;42231:8;42241:18;:7;:16;:18::i;:::-;42214:46;;;;;;;;;;;;;;;;;;;;;;;42200:61;;;41528:740;;;;:::o;1505:429:2:-;1580:4;1596:18;1617:15;1625:6;1617:7;:15::i;:::-;1596:36;;1660:13;1651:7;:22;1643:54;;;;;;;;;;;;;;;;;;;;;;1708:18;1729:24;1737:6;:15;;;1729:7;:24::i;:::-;1708:45;;1792:7;1764:12;:24;1777:10;1764:24;;;;;;;;;;;;;;;;:35;;;;;;;;;;;1838:7;1810:12;:24;1823:10;1810:24;;;;;;;;;;;;;;;;:35;;;;;;;;;;;1856:48;1866:10;1877;1888:6;:15;;;1856:9;:48::i;:::-;1922:4;1915:11;;;;1505:429;;;;:::o;46172:154:0:-;46261:4;46284:18;:25;46303:5;46284:25;;;;;;;;;;;;;;;:35;46310:8;46284:35;;;;;;;;;;;;;;;;;;;;;;;;;46277:42;;46172:154;;;;:::o;1052:397:2:-;1110:4;1127:10;1140:1;1127:14;;1171:1;1156:6;:11;;;:16;;:37;;;;;1191:2;1176:6;:11;;;:17;;1156:37;1152:204;;;1204:2;1196:10;;1152:204;;;1241:2;1227:6;:11;;;:16;:37;;;;;1262:2;1247:6;:11;;;:17;;1227:37;1223:133;;;1275:3;1267:11;;1223:133;;;1313:2;1299:6;:11;;;:16;1295:61;;;1327:3;1319:11;;1295:61;;;1355:1;1347:9;;1295:61;1223:133;1152:204;1393:4;1371:26;;:6;:18;;;:26;;;1367:52;;;1416:1;1408:5;:9;1400:17;;1367:52;1436:5;1429:12;;;1052:397;;;:::o;50035:117:0:-;50092:4;50115:30;50137:7;50115:12;:21;;:30;;;;:::i;:::-;50108:37;;50035:117;;;:::o;816:104::-;869:15;903:10;896:17;;816:104;:::o;57059:155::-;57151:2;57124:15;:24;57140:7;57124:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;57199:7;57195:2;57168:39;;57177:16;57185:7;57177;:16::i;:::-;57168:39;;;;;;;;;;;;57059:155;;:::o;33765:121::-;33834:7;33860:19;33868:3;:10;;33860:7;:19::i;:::-;33853:26;;33765:121;;;:::o;50513:329::-;50598:4;50622:16;50630:7;50622;:16::i;:::-;50614:73;;;;;;;;;;;;;;;;;;;;;;50697:13;50713:16;50721:7;50713;:16::i;:::-;50697:32;;50758:5;50747:16;;:7;:16;;;:51;;;;50791:7;50767:31;;:20;50779:7;50767:11;:20::i;:::-;:31;;;50747:51;:87;;;;50802:32;50819:5;50826:7;50802:16;:32::i;:::-;50747:87;50739:96;;;50513:329;;;;:::o;54025:559::-;54142:4;54122:24;;:16;54130:7;54122;:16::i;:::-;:24;;;54114:78;;;;;;;;;;;;;;;;;;;;;;54224:1;54210:16;;:2;:16;;;;54202:65;;;;;;;;;;;;;;;;;;;;;;54278:39;54299:4;54305:2;54309:7;54278:20;:39::i;:::-;54379:29;54396:1;54400:7;54379:8;:29::i;:::-;54419:35;54446:7;54419:13;:19;54433:4;54419:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;54464:30;54486:7;54464:13;:17;54478:2;54464:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;54505:29;54522:7;54531:2;54505:12;:16;;:29;;;;;:::i;:::-;;54569:7;54565:2;54550:27;;54559:4;54550:27;;;;;;;;;;;;54025:559;;;:::o;26578:135::-;26649:7;26683:22;26687:3;:10;;26699:5;26683:3;:22::i;:::-;26675:31;;26668:38;;26578:135;;;;:::o;34214:224::-;34294:7;34303;34323:11;34336:13;34353:22;34357:3;:10;;34369:5;34353:3;:22::i;:::-;34322:53;;;;34401:3;34393:12;;34423:5;34415:14;;34385:46;;;;;;;;;34214:224;;;;;:::o;34857:202::-;34964:7;35006:44;35011:3;:10;;35031:3;35023:12;;35037;35006:4;:44::i;:::-;34998:53;;34983:69;;34857:202;;;;;:::o;26134:112::-;26194:7;26220:19;26228:3;:10;;26220:7;:19::i;:::-;26213:26;;26134:112;;;:::o;52572:393::-;52665:1;52651:16;;:2;:16;;;;52643:61;;;;;;;;;;;;;;;;;;;;;;52723:16;52731:7;52723;:16::i;:::-;52722:17;52714:58;;;;;;;;;;;;;;;;;;;;;;52783:45;52812:1;52816:2;52820:7;52783:20;:45::i;:::-;52839:30;52861:7;52839:13;:17;52853:2;52839:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;52880:29;52897:7;52906:2;52880:12;:16;;:29;;;;;:::i;:::-;;52950:7;52946:2;52925:33;;52942:1;52925:33;;;;;;;;;;;;52572:393;;:::o;49571:269::-;49684:28;49694:4;49700:2;49704:7;49684:9;:28::i;:::-;49730:48;49753:4;49759:2;49763:7;49772:5;49730:22;:48::i;:::-;49722:111;;;;;;;;;;;;;;;;;;;;;;49571:269;;;;:::o;35284:723::-;35340:13;35566:1;35557:5;:10;35553:51;;;35583:10;;;;;;;;;;;;;;;;;;;;;35553:51;35613:12;35628:5;35613:20;;35643:14;35667:75;35682:1;35674:4;:9;35667:75;;35699:8;;;;;;;35729:2;35721:10;;;;;;;;;35667:75;;;35751:19;35783:6;35773:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35751:39;;35800:13;35825:1;35816:6;:10;35800:26;;35843:5;35836:12;;35858:112;35873:1;35865:4;:9;35858:112;;35931:2;35924:4;:9;;;;;;35919:2;:14;35908:27;;35890:6;35897:7;;;;;;;35890:15;;;;;;;;;;;:45;;;;;;;;;;;35957:2;35949:10;;;;;;;;;35858:112;;;35993:6;35979:21;;;;;;35284:723;;;;:::o;33533:149::-;33617:4;33640:35;33650:3;:10;;33670:3;33662:12;;33640:9;:35::i;:::-;33633:42;;33533:149;;;;:::o;31225:108::-;31281:7;31307:3;:12;;:19;;;;31300:26;;31225:108;;;:::o;57770:93::-;;;;:::o;25693:135::-;25763:4;25786:35;25794:3;:10;;25814:5;25806:14;;25786:7;:35::i;:::-;25779:42;;25693:135;;;;:::o;25396:129::-;25463:4;25486:32;25491:3;:10;;25511:5;25503:14;;25486:4;:32::i;:::-;25479:39;;25396:129;;;;:::o;32981:174::-;33070:4;33093:55;33098:3;:10;;33118:3;33110:12;;33140:5;33132:14;;33124:23;;33093:4;:55::i;:::-;33086:62;;32981:174;;;;;:::o;23352:201::-;23419:7;23467:5;23446:3;:11;;:18;;;;:26;23438:73;;;;;;;;;;;;;;;;;;;;;;23528:3;:11;;23540:5;23528:18;;;;;;;;;;;;;;;;23521:25;;23352:201;;;;:::o;31676:274::-;31743:7;31752;31801:5;31779:3;:12;;:19;;;;:27;31771:74;;;;;;;;;;;;;;;;;;;;;;31856:22;31881:3;:12;;31894:5;31881:19;;;;;;;;;;;;;;;;;;31856:44;;31918:5;:10;;;31930:5;:12;;;31910:33;;;;;31676:274;;;;;:::o;32357:315::-;32451:7;32470:16;32489:3;:12;;:17;32502:3;32489:17;;;;;;;;;;;;32470:36;;32536:1;32524:8;:13;;32539:12;32516:36;;;;;;;;;;;;;;;;;;;;;;;;;32605:3;:12;;32629:1;32618:8;:12;32605:26;;;;;;;;;;;;;;;;;;:33;;;32598:40;;;32357:315;;;;;:::o;22913:107::-;22969:7;22995:3;:11;;:18;;;;22988:25;;22913:107;;;:::o;56003:1050::-;56123:4;56148:15;:2;:13;;;:15::i;:::-;56143:58;;56186:4;56179:11;;;;56143:58;56270:12;56284:23;56311:2;:7;;56355:45;;;56414:12;:10;:12::i;:::-;56440:4;56458:7;56479:5;56319:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56311:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56269:226;;;;56510:7;56505:542;;56557:1;56537:10;:17;:21;56533:376;;;56702:10;56696:17;56762:15;56749:10;56745:2;56741:19;56734:44;56651:145;56834:60;;;;;;;;;;;;;;;;;;;56505:542;56939:13;56966:10;56955:32;;;;;;;;;;;;;;56939:48;;36737:10;57019:16;;57009:26;;;:6;:26;;;;57001:35;;;;;56003:1050;;;;;;;:::o;31012:123::-;31083:4;31127:1;31106:3;:12;;:17;31119:3;31106:17;;;;;;;;;;;;:22;;31099:29;;31012:123;;;;:::o;21112:1512::-;21178:4;21294:18;21315:3;:12;;:19;21328:5;21315:19;;;;;;;;;;;;21294:40;;21363:1;21349:10;:15;21345:1273;;21706:21;21743:1;21730:10;:14;21706:38;;21758:17;21799:1;21778:3;:11;;:18;;;;:22;21758:42;;22040:17;22060:3;:11;;22072:9;22060:22;;;;;;;;;;;;;;;;22040:42;;22203:9;22174:3;:11;;22186:13;22174:26;;;;;;;;;;;;;;;:38;;;;22320:1;22304:13;:17;22278:3;:12;;:23;22291:9;22278:23;;;;;;;;;;;:43;;;;22427:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;22519:3;:12;;:19;22532:5;22519:19;;;;;;;;;;;22512:26;;;22560:4;22553:11;;;;;;;;21345:1273;22602:5;22595:12;;;21112:1512;;;;;:::o;20540:404::-;20603:4;20624:21;20634:3;20639:5;20624:9;:21::i;:::-;20619:319;;20661:3;:11;;20678:5;20661:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20841:3;:11;;:18;;;;20819:3;:12;;:19;20832:5;20819:19;;;;;;;;;;;:40;;;;20880:4;20873:11;;;;20619:319;20922:5;20915:12;;20540:404;;;;;:::o;28570:678::-;28646:4;28760:16;28779:3;:12;;:17;28792:3;28779:17;;;;;;;;;;;;28760:36;;28823:1;28811:8;:13;28807:435;;;28877:3;:12;;28895:38;;;;;;;;28912:3;28895:38;;;;28925:5;28895:38;;;28877:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29089:3;:12;;:19;;;;29069:3;:12;;:17;29082:3;29069:17;;;;;;;;;;;:39;;;;29129:4;29122:11;;;;;28807:435;29200:5;29164:3;:12;;29188:1;29177:8;:12;29164:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;29226:5;29219:12;;;28570:678;;;;;;:::o;16982:610::-;17042:4;17300:16;17326:19;17348:66;17326:88;;;;17515:7;17503:20;17491:32;;17554:11;17542:8;:23;;:42;;;;;17581:3;17569:15;;:8;:15;;17542:42;17534:51;;;;16982:610;;;:::o;22705:127::-;22778:4;22824:1;22801:3;:12;;:19;22814:5;22801:19;;;;;;;;;;;;:24;;22794:31;;22705:127;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;408:132;;491:6;485:13;476:22;;503:32;529:5;503:32;;;470:70;;;;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;997:442;;1099:3;1092:4;1084:6;1080:17;1076:27;1066:2;;1117:1;1114;1107:12;1066:2;1154:6;1141:20;1176:65;1191:49;1233:6;1191:49;;;1176:65;;;1167:74;;1261:6;1254:5;1247:21;1297:4;1289:6;1285:17;1330:4;1323:5;1319:16;1365:3;1356:6;1351:3;1347:16;1344:25;1341:2;;;1382:1;1379;1372:12;1341:2;1392:41;1426:6;1421:3;1416;1392:41;;;1059:380;;;;;;;;1477:857;;1589:4;1577:9;1572:3;1568:19;1564:30;1561:2;;;1607:1;1604;1597:12;1561:2;1625:20;1640:4;1625:20;;;1616:29;;1699:1;1731:49;1776:3;1767:6;1756:9;1752:22;1731:49;;;1724:4;1717:5;1713:16;1706:75;1655:137;1870:2;1859:9;1855:18;1842:32;1894:18;1886:6;1883:30;1880:2;;;1926:1;1923;1916:12;1880:2;1961:59;2016:3;2007:6;1996:9;1992:22;1961:59;;;1954:4;1947:5;1943:16;1936:85;1802:230;2082:2;2115:49;2160:3;2151:6;2140:9;2136:22;2115:49;;;2108:4;2101:5;2097:16;2090:75;2042:134;2233:2;2266:46;2308:3;2299:6;2288:9;2284:22;2266:46;;;2259:4;2252:5;2248:16;2241:72;2186:138;1555:779;;;;;2341:130;;2421:6;2408:20;2399:29;;2433:33;2460:5;2433:33;;;2393:78;;;;;2478:241;;2582:2;2570:9;2561:7;2557:23;2553:32;2550:2;;;2598:1;2595;2588:12;2550:2;2633:1;2650:53;2695:7;2686:6;2675:9;2671:22;2650:53;;;2640:63;;2612:97;2544:175;;;;;2726:366;;;2847:2;2835:9;2826:7;2822:23;2818:32;2815:2;;;2863:1;2860;2853:12;2815:2;2898:1;2915:53;2960:7;2951:6;2940:9;2936:22;2915:53;;;2905:63;;2877:97;3005:2;3023:53;3068:7;3059:6;3048:9;3044:22;3023:53;;;3013:63;;2984:98;2809:283;;;;;;3099:491;;;;3237:2;3225:9;3216:7;3212:23;3208:32;3205:2;;;3253:1;3250;3243:12;3205:2;3288:1;3305:53;3350:7;3341:6;3330:9;3326:22;3305:53;;;3295:63;;3267:97;3395:2;3413:53;3458:7;3449:6;3438:9;3434:22;3413:53;;;3403:63;;3374:98;3503:2;3521:53;3566:7;3557:6;3546:9;3542:22;3521:53;;;3511:63;;3482:98;3199:391;;;;;;3597:721;;;;;3761:3;3749:9;3740:7;3736:23;3732:33;3729:2;;;3778:1;3775;3768:12;3729:2;3813:1;3830:53;3875:7;3866:6;3855:9;3851:22;3830:53;;;3820:63;;3792:97;3920:2;3938:53;3983:7;3974:6;3963:9;3959:22;3938:53;;;3928:63;;3899:98;4028:2;4046:53;4091:7;4082:6;4071:9;4067:22;4046:53;;;4036:63;;4007:98;4164:2;4153:9;4149:18;4136:32;4188:18;4180:6;4177:30;4174:2;;;4220:1;4217;4210:12;4174:2;4240:62;4294:7;4285:6;4274:9;4270:22;4240:62;;;4230:72;;4115:193;3723:595;;;;;;;;4325:360;;;4443:2;4431:9;4422:7;4418:23;4414:32;4411:2;;;4459:1;4456;4449:12;4411:2;4494:1;4511:53;4556:7;4547:6;4536:9;4532:22;4511:53;;;4501:63;;4473:97;4601:2;4619:50;4661:7;4652:6;4641:9;4637:22;4619:50;;;4609:60;;4580:95;4405:280;;;;;;4692:366;;;4813:2;4801:9;4792:7;4788:23;4784:32;4781:2;;;4829:1;4826;4819:12;4781:2;4864:1;4881:53;4926:7;4917:6;4906:9;4902:22;4881:53;;;4871:63;;4843:97;4971:2;4989:53;5034:7;5025:6;5014:9;5010:22;4989:53;;;4979:63;;4950:98;4775:283;;;;;;5065:239;;5168:2;5156:9;5147:7;5143:23;5139:32;5136:2;;;5184:1;5181;5174:12;5136:2;5219:1;5236:52;5280:7;5271:6;5260:9;5256:22;5236:52;;;5226:62;;5198:96;5130:174;;;;;5311:261;;5425:2;5413:9;5404:7;5400:23;5396:32;5393:2;;;5441:1;5438;5431:12;5393:2;5476:1;5493:63;5548:7;5539:6;5528:9;5524:22;5493:63;;;5483:73;;5455:107;5387:185;;;;;5579:373;;5706:2;5694:9;5685:7;5681:23;5677:32;5674:2;;;5722:1;5719;5712:12;5674:2;5785:1;5774:9;5770:17;5757:31;5808:18;5800:6;5797:30;5794:2;;;5840:1;5837;5830:12;5794:2;5860:76;5928:7;5919:6;5908:9;5904:22;5860:76;;;5850:86;;5736:206;5668:284;;;;;5959:498;;;6103:2;6091:9;6082:7;6078:23;6074:32;6071:2;;;6119:1;6116;6109:12;6071:2;6182:1;6171:9;6167:17;6154:31;6205:18;6197:6;6194:30;6191:2;;;6237:1;6234;6227:12;6191:2;6257:76;6325:7;6316:6;6305:9;6301:22;6257:76;;;6247:86;;6133:206;6370:2;6388:53;6433:7;6424:6;6413:9;6409:22;6388:53;;;6378:63;;6349:98;6065:392;;;;;;6464:241;;6568:2;6556:9;6547:7;6543:23;6539:32;6536:2;;;6584:1;6581;6574:12;6536:2;6619:1;6636:53;6681:7;6672:6;6661:9;6657:22;6636:53;;;6626:63;;6598:97;6530:175;;;;;6712:137;6811:32;6837:5;6811:32;;;6806:3;6799:45;6793:56;;;6856:113;6939:24;6957:5;6939:24;;;6934:3;6927:37;6921:48;;;6976:104;7053:21;7068:5;7053:21;;;7048:3;7041:34;7035:45;;;7087:343;;7197:38;7229:5;7197:38;;;7247:70;7310:6;7305:3;7247:70;;;7240:77;;7322:52;7367:6;7362:3;7355:4;7348:5;7344:16;7322:52;;;7395:29;7417:6;7395:29;;;7390:3;7386:39;7379:46;;7177:253;;;;;;7437:356;;7565:38;7597:5;7565:38;;;7615:88;7696:6;7691:3;7615:88;;;7608:95;;7708:52;7753:6;7748:3;7741:4;7734:5;7730:16;7708:52;;;7781:6;7776:3;7772:16;7765:23;;7545:248;;;;;;7800:347;;7912:39;7945:5;7912:39;;;7963:71;8027:6;8022:3;7963:71;;;7956:78;;8039:52;8084:6;8079:3;8072:4;8065:5;8061:16;8039:52;;;8112:29;8134:6;8112:29;;;8107:3;8103:39;8096:46;;7892:255;;;;;;8154:360;;8284:39;8317:5;8284:39;;;8335:89;8417:6;8412:3;8335:89;;;8328:96;;8429:52;8474:6;8469:3;8462:4;8455:5;8451:16;8429:52;;;8502:6;8497:3;8493:16;8486:23;;8264:250;;;;;;8546:884;;8683:5;8677:12;8717:1;8706:9;8702:17;8730:1;8725:268;;;;9004:1;8999:425;;;;8695:729;;8725:268;8803:4;8799:1;8788:9;8784:17;8780:28;8822:89;8904:6;8899:3;8822:89;;;8815:96;;8949:4;8945:9;8934;8930:25;8925:3;8918:38;8979:6;8974:3;8970:16;8963:23;;8732:261;8725:268;;8999:425;9068:1;9057:9;9053:17;9084:89;9166:6;9161:3;9084:89;;;9077:96;;9195:38;9227:5;9195:38;;;9249:1;9257:130;9271:6;9268:1;9265:13;9257:130;;;9336:7;9330:14;9326:1;9321:3;9317:11;9310:35;9377:1;9368:7;9364:15;9353:26;;9293:4;9290:1;9286:12;9281:17;;9257:130;;;9410:6;9405:3;9401:16;9394:23;;9006:418;;;8695:729;;8653:777;;;;;;9439:371;;9599:67;9663:2;9658:3;9599:67;;;9592:74;;9699:34;9695:1;9690:3;9686:11;9679:55;9768:4;9763:2;9758:3;9754:12;9747:26;9801:2;9796:3;9792:12;9785:19;;9585:225;;;;9819:323;;9979:67;10043:2;10038:3;9979:67;;;9972:74;;10079:25;10075:1;10070:3;10066:11;10059:46;10133:2;10128:3;10124:12;10117:19;;9965:177;;;;10151:387;;10311:67;10375:2;10370:3;10311:67;;;10304:74;;10411:34;10407:1;10402:3;10398:11;10391:55;10480:20;10475:2;10470:3;10466:12;10459:42;10529:2;10524:3;10520:12;10513:19;;10297:241;;;;10547:328;;10707:67;10771:2;10766:3;10707:67;;;10700:74;;10807:30;10803:1;10798:3;10794:11;10787:51;10866:2;10861:3;10857:12;10850:19;;10693:182;;;;10884:373;;11044:67;11108:2;11103:3;11044:67;;;11037:74;;11144:34;11140:1;11135:3;11131:11;11124:55;11213:6;11208:2;11203:3;11199:12;11192:28;11248:2;11243:3;11239:12;11232:19;;11030:227;;;;11266:325;;11426:67;11490:2;11485:3;11426:67;;;11419:74;;11526:27;11522:1;11517:3;11513:11;11506:48;11582:2;11577:3;11573:12;11566:19;;11412:179;;;;11600:320;;11760:67;11824:2;11819:3;11760:67;;;11753:74;;11860:22;11856:1;11851:3;11847:11;11840:43;11911:2;11906:3;11902:12;11895:19;;11746:174;;;;11929:381;;12089:67;12153:2;12148:3;12089:67;;;12082:74;;12189:34;12185:1;12180:3;12176:11;12169:55;12258:14;12253:2;12248:3;12244:12;12237:36;12301:2;12296:3;12292:12;12285:19;;12075:235;;;;12319:393;;12479:67;12543:2;12538:3;12479:67;;;12472:74;;12579:34;12575:1;12570:3;12566:11;12559:55;12648:26;12643:2;12638:3;12634:12;12627:48;12703:2;12698:3;12694:12;12687:19;;12465:247;;;;12721:379;;12881:67;12945:2;12940:3;12881:67;;;12874:74;;12981:34;12977:1;12972:3;12968:11;12961:55;13050:12;13045:2;13040:3;13036:12;13029:34;13091:2;13086:3;13082:12;13075:19;;12867:233;;;;13109:371;;13269:67;13333:2;13328:3;13269:67;;;13262:74;;13369:34;13365:1;13360:3;13356:11;13349:55;13438:4;13433:2;13428:3;13424:12;13417:26;13471:2;13466:3;13462:12;13455:19;;13255:225;;;;13489:332;;13649:67;13713:2;13708:3;13649:67;;;13642:74;;13749:34;13745:1;13740:3;13736:11;13729:55;13812:2;13807:3;13803:12;13796:19;;13635:186;;;;13830:381;;13990:67;14054:2;14049:3;13990:67;;;13983:74;;14090:34;14086:1;14081:3;14077:11;14070:55;14159:14;14154:2;14149:3;14145:12;14138:36;14202:2;14197:3;14193:12;14186:19;;13976:235;;;;14220:378;;14380:67;14444:2;14439:3;14380:67;;;14373:74;;14480:34;14476:1;14471:3;14467:11;14460:55;14549:11;14544:2;14539:3;14535:12;14528:33;14589:2;14584:3;14580:12;14573:19;;14366:232;;;;14607:384;;14767:67;14831:2;14826:3;14767:67;;;14760:74;;14867:34;14863:1;14858:3;14854:11;14847:55;14936:17;14931:2;14926:3;14922:12;14915:39;14982:2;14977:3;14973:12;14966:19;;14753:238;;;;15000:370;;15160:67;15224:2;15219:3;15160:67;;;15153:74;;15260:34;15256:1;15251:3;15247:11;15240:55;15329:3;15324:2;15319:3;15315:12;15308:25;15361:2;15356:3;15352:12;15345:19;;15146:224;;;;15379:386;;15539:67;15603:2;15598:3;15539:67;;;15532:74;;15639:34;15635:1;15630:3;15626:11;15619:55;15708:19;15703:2;15698:3;15694:12;15687:41;15756:2;15751:3;15747:12;15740:19;;15525:240;;;;15773:113;15856:24;15874:5;15856:24;;;15851:3;15844:37;15838:48;;;15893:271;;16046:93;16135:3;16126:6;16046:93;;;16039:100;;16156:3;16149:10;;16027:137;;;;;16171:430;;16371:92;16459:3;16450:6;16371:92;;;16364:99;;16481:95;16572:3;16563:6;16481:95;;;16474:102;;16593:3;16586:10;;16352:249;;;;;;16608:222;;16735:2;16724:9;16720:18;16712:26;;16749:71;16817:1;16806:9;16802:17;16793:6;16749:71;;;16706:124;;;;;16837:672;;17082:3;17071:9;17067:19;17059:27;;17097:87;17181:1;17170:9;17166:17;17157:6;17097:87;;;17195:72;17263:2;17252:9;17248:18;17239:6;17195:72;;;17278;17346:2;17335:9;17331:18;17322:6;17278:72;;;17398:9;17392:4;17388:20;17383:2;17372:9;17368:18;17361:48;17423:76;17494:4;17485:6;17423:76;;;17415:84;;17053:456;;;;;;;;17516:210;;17637:2;17626:9;17622:18;17614:26;;17651:65;17713:1;17702:9;17698:17;17689:6;17651:65;;;17608:118;;;;;17733:310;;17880:2;17869:9;17865:18;17857:26;;17930:9;17924:4;17920:20;17916:1;17905:9;17901:17;17894:47;17955:78;18028:4;18019:6;17955:78;;;17947:86;;17851:192;;;;;18050:416;;18250:2;18239:9;18235:18;18227:26;;18300:9;18294:4;18290:20;18286:1;18275:9;18271:17;18264:47;18325:131;18451:4;18325:131;;;18317:139;;18221:245;;;;18473:416;;18673:2;18662:9;18658:18;18650:26;;18723:9;18717:4;18713:20;18709:1;18698:9;18694:17;18687:47;18748:131;18874:4;18748:131;;;18740:139;;18644:245;;;;18896:416;;19096:2;19085:9;19081:18;19073:26;;19146:9;19140:4;19136:20;19132:1;19121:9;19117:17;19110:47;19171:131;19297:4;19171:131;;;19163:139;;19067:245;;;;19319:416;;19519:2;19508:9;19504:18;19496:26;;19569:9;19563:4;19559:20;19555:1;19544:9;19540:17;19533:47;19594:131;19720:4;19594:131;;;19586:139;;19490:245;;;;19742:416;;19942:2;19931:9;19927:18;19919:26;;19992:9;19986:4;19982:20;19978:1;19967:9;19963:17;19956:47;20017:131;20143:4;20017:131;;;20009:139;;19913:245;;;;20165:416;;20365:2;20354:9;20350:18;20342:26;;20415:9;20409:4;20405:20;20401:1;20390:9;20386:17;20379:47;20440:131;20566:4;20440:131;;;20432:139;;20336:245;;;;20588:416;;20788:2;20777:9;20773:18;20765:26;;20838:9;20832:4;20828:20;20824:1;20813:9;20809:17;20802:47;20863:131;20989:4;20863:131;;;20855:139;;20759:245;;;;21011:416;;21211:2;21200:9;21196:18;21188:26;;21261:9;21255:4;21251:20;21247:1;21236:9;21232:17;21225:47;21286:131;21412:4;21286:131;;;21278:139;;21182:245;;;;21434:416;;21634:2;21623:9;21619:18;21611:26;;21684:9;21678:4;21674:20;21670:1;21659:9;21655:17;21648:47;21709:131;21835:4;21709:131;;;21701:139;;21605:245;;;;21857:416;;22057:2;22046:9;22042:18;22034:26;;22107:9;22101:4;22097:20;22093:1;22082:9;22078:17;22071:47;22132:131;22258:4;22132:131;;;22124:139;;22028:245;;;;22280:416;;22480:2;22469:9;22465:18;22457:26;;22530:9;22524:4;22520:20;22516:1;22505:9;22501:17;22494:47;22555:131;22681:4;22555:131;;;22547:139;;22451:245;;;;22703:416;;22903:2;22892:9;22888:18;22880:26;;22953:9;22947:4;22943:20;22939:1;22928:9;22924:17;22917:47;22978:131;23104:4;22978:131;;;22970:139;;22874:245;;;;23126:416;;23326:2;23315:9;23311:18;23303:26;;23376:9;23370:4;23366:20;23362:1;23351:9;23347:17;23340:47;23401:131;23527:4;23401:131;;;23393:139;;23297:245;;;;23549:416;;23749:2;23738:9;23734:18;23726:26;;23799:9;23793:4;23789:20;23785:1;23774:9;23770:17;23763:47;23824:131;23950:4;23824:131;;;23816:139;;23720:245;;;;23972:416;;24172:2;24161:9;24157:18;24149:26;;24222:9;24216:4;24212:20;24208:1;24197:9;24193:17;24186:47;24247:131;24373:4;24247:131;;;24239:139;;24143:245;;;;24395:416;;24595:2;24584:9;24580:18;24572:26;;24645:9;24639:4;24635:20;24631:1;24620:9;24616:17;24609:47;24670:131;24796:4;24670:131;;;24662:139;;24566:245;;;;24818:416;;25018:2;25007:9;25003:18;24995:26;;25068:9;25062:4;25058:20;25054:1;25043:9;25039:17;25032:47;25093:131;25219:4;25093:131;;;25085:139;;24989:245;;;;25241:222;;25368:2;25357:9;25353:18;25345:26;;25382:71;25450:1;25439:9;25435:17;25426:6;25382:71;;;25339:124;;;;;25470:632;;25695:3;25684:9;25680:19;25672:27;;25710:71;25778:1;25767:9;25763:17;25754:6;25710:71;;;25829:9;25823:4;25819:20;25814:2;25803:9;25799:18;25792:48;25854:78;25927:4;25918:6;25854:78;;;25846:86;;25943:72;26011:2;26000:9;25996:18;25987:6;25943:72;;;26026:66;26088:2;26077:9;26073:18;26064:6;26026:66;;;25666:436;;;;;;;;26109:256;;26171:2;26165:9;26155:19;;26209:4;26201:6;26197:17;26308:6;26296:10;26293:22;26272:18;26260:10;26257:34;26254:62;26251:2;;;26329:1;26326;26319:12;26251:2;26349:10;26345:2;26338:22;26149:216;;;;;26372:321;;26515:18;26507:6;26504:30;26501:2;;;26547:1;26544;26537:12;26501:2;26614:4;26610:9;26603:4;26595:6;26591:17;26587:33;26579:41;;26678:4;26672;26668:15;26660:23;;26438:255;;;;26700:322;;26844:18;26836:6;26833:30;26830:2;;;26876:1;26873;26866:12;26830:2;26943:4;26939:9;26932:4;26924:6;26920:17;26916:33;26908:41;;27007:4;27001;26997:15;26989:23;;26767:255;;;;27029:158;;27097:3;27089:11;;27134:3;27131:1;27124:14;27166:4;27163:1;27153:18;27145:26;;27083:104;;;;27194:121;;27287:5;27281:12;27271:22;;27252:63;;;;27322:122;;27416:5;27410:12;27400:22;;27381:63;;;;27452:162;;27566:6;27561:3;27554:19;27603:4;27598:3;27594:14;27579:29;;27547:67;;;;;27623:144;;27758:3;27743:18;;27736:31;;;;;27776:163;;27891:6;27886:3;27879:19;27928:4;27923:3;27919:14;27904:29;;27872:67;;;;;27948:145;;28084:3;28069:18;;28062:31;;;;;28101:91;;28163:24;28181:5;28163:24;;;28152:35;;28146:46;;;;28199:99;;28269:24;28287:5;28269:24;;;28258:35;;28252:46;;;;28305:85;;28378:5;28371:13;28364:21;28353:32;;28347:43;;;;28397:144;;28469:66;28462:5;28458:78;28447:89;;28441:100;;;;28548:121;;28621:42;28614:5;28610:54;28599:65;;28593:76;;;;28676:72;;28738:5;28727:16;;28721:27;;;;28756:145;28837:6;28832:3;28827;28814:30;28893:1;28884:6;28879:3;28875:16;28868:27;28807:94;;;;28910:268;28975:1;28982:101;28996:6;28993:1;28990:13;28982:101;;;29072:1;29067:3;29063:11;29057:18;29053:1;29048:3;29044:11;29037:39;29018:2;29015:1;29011:10;29006:15;;28982:101;;;29098:6;29095:1;29092:13;29089:2;;;29163:1;29154:6;29149:3;29145:16;29138:27;29089:2;28959:219;;;;;29186:97;;29274:2;29270:7;29265:2;29258:5;29254:14;29250:28;29240:38;;29234:49;;;;29291:117;29360:24;29378:5;29360:24;;;29353:5;29350:35;29340:2;;29399:1;29396;29389:12;29340:2;29334:74;;29415:111;29481:21;29496:5;29481:21;;;29474:5;29471:32;29461:2;;29517:1;29514;29507:12;29461:2;29455:71;;29533:115;29601:23;29618:5;29601:23;;;29594:5;29591:34;29581:2;;29639:1;29636;29629:12;29581:2;29575:73;;29655:117;29724:24;29742:5;29724:24;;;29717:5;29714:35;29704:2;;29763:1;29760;29753:12;29704:2;29698:74;",
  "source": "\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./ERC721.sol\";\r\n\r\ncontract photoToken is ERC721 {\r\n\r\n\tstruct Photo\r\n\t{\r\n        uint photo_id;\r\n        string name;\r\n        uint size;\r\n        bool originality;\r\n\t}\r\n\r\n\tPhoto[] public photos;\r\n\r\n    mapping(address => uint) etherBalance;\r\n\r\n\tmapping(uint => bool) _photoExists;\r\n\r\n\tconstructor () ERC721(\"Photo\",\"PIC\") public {\r\n\t}\r\n\r\n//Mints a token for the caller.\r\n\tfunction mint(Photo memory _photo) public {\r\n\t\trequire(_photoExists[_photo.photo_id] == false, \"photo_id already exists\");\r\n\t\tphotos.push(_photo);\r\n\t\t_photoExists[_photo.photo_id] = true;\r\n\t\t_mint(msg.sender, _photo.photo_id);\r\n\t}\r\n\r\n    function ownerof(uint256 tokenId) public view returns (address) {\r\n        return ownerOf(tokenId);\r\n    }\r\n\r\n    function balanceof(address owner) public view returns (uint256) {\r\n        return balanceOf(owner);\r\n    }\r\n\r\n//A function that can set value for the unique item in a standardized way. So far limited to a single token.\r\n\tfunction look_up(Photo memory _photo) public pure returns(uint) {\r\n        uint value = 0;\r\n        if (_photo.size >= 0 && _photo.size <= 10) {value = 50;}\r\n        else if (_photo.size > 10 && _photo.size <= 20) {value = 100;}\r\n        else if (_photo.size > 20 ) {value = 200;}\r\n        else value = 0;\r\n        if (_photo.originality == true) {value = value * 2;}\r\n        return value;\r\n    }\r\n\r\n//This function should be called by the buyer.\r\n    function exchange(Photo memory _photo,uint _amount) public payable returns(bool){\r\n        uint requiredValue = look_up(_photo);\r\n        require(_amount==requiredValue,\"Incorrect value sent\");\r\n        address photoOwner = ownerOf(_photo.photo_id);\r\n        etherBalance[photoOwner] += _amount;\r\n        etherBalance[photoOwner] -= _amount;\r\n        _transfer(photoOwner,msg.sender,_photo.photo_id);\r\n        return true;\r\n    }\r\n\r\n}",
  "sourcePath": "Z:\\BD\\Smart Contract Essentials\\assignment\\trial2\\contracts\\photo_base.sol",
  "ast": {
    "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol",
    "exportedSymbols": {
      "photoToken": [
        2679
      ]
    },
    "id": 2680,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2464,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "id": 2465,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "62:33:2"
      },
      {
        "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2466,
        "nodeType": "ImportDirective",
        "scope": 2680,
        "sourceUnit": 2406,
        "src": "99:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2467,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2405,
              "src": "148:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2405",
                "typeString": "contract ERC721"
              }
            },
            "id": 2468,
            "nodeType": "InheritanceSpecifier",
            "src": "148:6:2"
          }
        ],
        "contractDependencies": [
          26,
          37,
          151,
          176,
          205,
          277,
          2405
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2679,
        "linearizedBaseContracts": [
          2679,
          2405,
          205,
          176,
          151,
          277,
          37,
          26
        ],
        "name": "photoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "photoToken.Photo",
            "id": 2477,
            "members": [
              {
                "constant": false,
                "id": 2470,
                "mutability": "mutable",
                "name": "photo_id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "187:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2469,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2472,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "211:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2471,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2474,
                "mutability": "mutable",
                "name": "size",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "233:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2473,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2476,
                "mutability": "mutable",
                "name": "originality",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "253:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2475,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Photo",
            "nodeType": "StructDefinition",
            "scope": 2679,
            "src": "161:113:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af2a5d6f",
            "id": 2480,
            "mutability": "mutable",
            "name": "photos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2679,
            "src": "279:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Photo_$2477_storage_$dyn_storage",
              "typeString": "struct photoToken.Photo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2478,
                "name": "Photo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2477,
                "src": "279:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                  "typeString": "struct photoToken.Photo"
                }
              },
              "id": 2479,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "279:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Photo_$2477_storage_$dyn_storage_ptr",
                "typeString": "struct photoToken.Photo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2484,
            "mutability": "mutable",
            "name": "etherBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2679,
            "src": "309:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2483,
              "keyType": {
                "id": 2481,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "317:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "309:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2482,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "328:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2488,
            "mutability": "mutable",
            "name": "_photoExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2679,
            "src": "352:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 2487,
              "keyType": {
                "id": 2485,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "360:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "352:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 2486,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "368:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2495,
              "nodeType": "Block",
              "src": "436:5:2",
              "statements": []
            },
            "documentation": null,
            "id": 2496,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50686f746f",
                    "id": 2491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "414:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0cd4a4bc081385231480fe39157001287f8cda715836354d304edf2543a7010b",
                      "typeString": "literal_string \"Photo\""
                    },
                    "value": "Photo"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "504943",
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "422:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6b749f7c8e1e83206ed83ad2813cfac0d13231da4ab361317f917e1e907b947e",
                      "typeString": "literal_string \"PIC\""
                    },
                    "value": "PIC"
                  }
                ],
                "id": 2493,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2490,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2405,
                  "src": "407:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2405_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "407:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:2"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:2"
            },
            "scope": 2679,
            "src": "392:49:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2531,
              "nodeType": "Block",
              "src": "521:188:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2502,
                            "name": "_photoExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2488,
                            "src": "534:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2505,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2503,
                              "name": "_photo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2498,
                              "src": "547:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                                "typeString": "struct photoToken.Photo memory"
                              }
                            },
                            "id": 2504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "photo_id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "547:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "534:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "567:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "534:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70686f746f5f696420616c726561647920657869737473",
                        "id": 2508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "574:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        },
                        "value": "photo_id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        }
                      ],
                      "id": 2501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "526:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "526:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2514,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2498,
                        "src": "617:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2511,
                        "name": "photos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "605:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Photo_$2477_storage_$dyn_storage",
                          "typeString": "struct photoToken.Photo storage ref[] storage ref"
                        }
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "605:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Photo_$2477_storage_$returns$__$",
                        "typeString": "function (struct photoToken.Photo storage ref)"
                      }
                    },
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "605:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2517,
                        "name": "_photoExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "629:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2520,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2518,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2498,
                          "src": "642:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "642:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "629:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "661:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "629:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2523,
                  "nodeType": "ExpressionStatement",
                  "src": "629:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "676:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "676:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2527,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2498,
                          "src": "688:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "688:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2524,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "670:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "670:34:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9d6ff9d0",
            "id": 2532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2532,
                  "src": "493:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2497,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2477,
                    "src": "493:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "492:21:2"
            },
            "returnParameters": {
              "id": 2500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:2"
            },
            "scope": 2679,
            "src": "479:230:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2543,
              "nodeType": "Block",
              "src": "781:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2540,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "807:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2539,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "799:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2538,
                  "id": 2542,
                  "nodeType": "Return",
                  "src": "792:23:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bdebb525",
            "id": 2544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerof",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2534,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2544,
                  "src": "734:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "733:17:2"
            },
            "returnParameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2544,
                  "src": "772:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:9:2"
            },
            "scope": 2679,
            "src": "717:106:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2555,
              "nodeType": "Block",
              "src": "895:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2552,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "923:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2551,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "913:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "913:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2550,
                  "id": 2554,
                  "nodeType": "Return",
                  "src": "906:23:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3d64125b",
            "id": 2556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceof",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2546,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2556,
                  "src": "850:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "849:15:2"
            },
            "returnParameters": {
              "id": 2550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2549,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2556,
                  "src": "886:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "885:9:2"
            },
            "scope": 2679,
            "src": "831:106:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2625,
              "nodeType": "Block",
              "src": "1116:333:2",
              "statements": [
                {
                  "assignments": [
                    2564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2564,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2625,
                      "src": "1127:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1127:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2566,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1140:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1127:14:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2567,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "1156:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "1156:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1171:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1156:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2571,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "1176:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2572,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "1176:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1191:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1176:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1156:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2581,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "1227:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2474,
                          "src": "1227:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1241:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1227:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2585,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "1247:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2586,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2474,
                          "src": "1247:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1262:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1247:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1227:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2595,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "1299:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2596,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2474,
                          "src": "1299:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1313:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1299:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2604,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "1347:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1355:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1347:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2607,
                        "nodeType": "ExpressionStatement",
                        "src": "1347:9:2"
                      },
                      "id": 2608,
                      "nodeType": "IfStatement",
                      "src": "1295:61:2",
                      "trueBody": {
                        "id": 2603,
                        "nodeType": "Block",
                        "src": "1318:14:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 2599,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2564,
                                "src": "1319:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "323030",
                                "id": 2600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1327:3:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "1319:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2602,
                            "nodeType": "ExpressionStatement",
                            "src": "1319:11:2"
                          }
                        ]
                      }
                    },
                    "id": 2609,
                    "nodeType": "IfStatement",
                    "src": "1223:133:2",
                    "trueBody": {
                      "id": 2594,
                      "nodeType": "Block",
                      "src": "1266:14:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 2590,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2564,
                              "src": "1267:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 2591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1275:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "1267:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2593,
                          "nodeType": "ExpressionStatement",
                          "src": "1267:11:2"
                        }
                      ]
                    }
                  },
                  "id": 2610,
                  "nodeType": "IfStatement",
                  "src": "1152:204:2",
                  "trueBody": {
                    "id": 2580,
                    "nodeType": "Block",
                    "src": "1195:13:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2576,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "1196:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3530",
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1204:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "1196:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2579,
                        "nodeType": "ExpressionStatement",
                        "src": "1196:10:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2611,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "1371:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      },
                      "id": 2612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "originality",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2476,
                      "src": "1371:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1393:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1371:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2622,
                  "nodeType": "IfStatement",
                  "src": "1367:52:2",
                  "trueBody": {
                    "id": 2621,
                    "nodeType": "Block",
                    "src": "1399:20:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2615,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "1400:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2616,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2564,
                              "src": "1408:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1416:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1408:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1400:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2620,
                        "nodeType": "ExpressionStatement",
                        "src": "1400:17:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2623,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2564,
                    "src": "1436:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2562,
                  "id": 2624,
                  "nodeType": "Return",
                  "src": "1429:12:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ee21e10b",
            "id": 2626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "look_up",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2558,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2626,
                  "src": "1069:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2557,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2477,
                    "src": "1069:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:21:2"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2626,
                  "src": "1110:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1109:6:2"
            },
            "scope": 2679,
            "src": "1052:397:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2677,
              "nodeType": "Block",
              "src": "1585:349:2",
              "statements": [
                {
                  "assignments": [
                    2636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2636,
                      "mutability": "mutable",
                      "name": "requiredValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2677,
                      "src": "1596:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2635,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1596:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2640,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2638,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "1625:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "id": 2637,
                      "name": "look_up",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2626,
                      "src": "1617:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Photo_$2477_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct photoToken.Photo memory) pure returns (uint256)"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1596:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2642,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2630,
                          "src": "1651:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2643,
                          "name": "requiredValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2636,
                          "src": "1660:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f72726563742076616c75652073656e74",
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1674:22:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        },
                        "value": "Incorrect value sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        }
                      ],
                      "id": 2641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1643:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:54:2"
                },
                {
                  "assignments": [
                    2649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2649,
                      "mutability": "mutable",
                      "name": "photoOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2677,
                      "src": "1708:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2648,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1708:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2654,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2651,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2628,
                          "src": "1737:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "1737:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2650,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "1729:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1708:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2655,
                        "name": "etherBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "1764:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2657,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2656,
                        "name": "photoOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1777:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1764:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2658,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2630,
                      "src": "1792:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1764:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2661,
                        "name": "etherBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "1810:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2663,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2662,
                        "name": "photoOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1823:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1810:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2664,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2630,
                      "src": "1838:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1810:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2668,
                        "name": "photoOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1866:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2669,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1877:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1877:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2671,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2628,
                          "src": "1888:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2672,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "1888:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2667,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2262,
                      "src": "1856:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2674,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:48:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1922:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2634,
                  "id": 2676,
                  "nodeType": "Return",
                  "src": "1915:11:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d8b2d714",
            "id": 2678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2678,
                  "src": "1523:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2627,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2477,
                    "src": "1523:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2678,
                  "src": "1543:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:34:2"
            },
            "returnParameters": {
              "id": 2634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2633,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2678,
                  "src": "1580:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:6:2"
            },
            "scope": 2679,
            "src": "1505:429:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2680,
        "src": "125:1814:2"
      }
    ],
    "src": "37:1902:2"
  },
  "legacyAST": {
    "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol",
    "exportedSymbols": {
      "photoToken": [
        2679
      ]
    },
    "id": 2680,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2464,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "id": 2465,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "62:33:2"
      },
      {
        "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2466,
        "nodeType": "ImportDirective",
        "scope": 2680,
        "sourceUnit": 2406,
        "src": "99:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2467,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2405,
              "src": "148:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2405",
                "typeString": "contract ERC721"
              }
            },
            "id": 2468,
            "nodeType": "InheritanceSpecifier",
            "src": "148:6:2"
          }
        ],
        "contractDependencies": [
          26,
          37,
          151,
          176,
          205,
          277,
          2405
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2679,
        "linearizedBaseContracts": [
          2679,
          2405,
          205,
          176,
          151,
          277,
          37,
          26
        ],
        "name": "photoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "photoToken.Photo",
            "id": 2477,
            "members": [
              {
                "constant": false,
                "id": 2470,
                "mutability": "mutable",
                "name": "photo_id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "187:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2469,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2472,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "211:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2471,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "211:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2474,
                "mutability": "mutable",
                "name": "size",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "233:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2473,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2476,
                "mutability": "mutable",
                "name": "originality",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2477,
                "src": "253:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2475,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Photo",
            "nodeType": "StructDefinition",
            "scope": 2679,
            "src": "161:113:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af2a5d6f",
            "id": 2480,
            "mutability": "mutable",
            "name": "photos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2679,
            "src": "279:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Photo_$2477_storage_$dyn_storage",
              "typeString": "struct photoToken.Photo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2478,
                "name": "Photo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2477,
                "src": "279:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                  "typeString": "struct photoToken.Photo"
                }
              },
              "id": 2479,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "279:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Photo_$2477_storage_$dyn_storage_ptr",
                "typeString": "struct photoToken.Photo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2484,
            "mutability": "mutable",
            "name": "etherBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2679,
            "src": "309:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2483,
              "keyType": {
                "id": 2481,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "317:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "309:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2482,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "328:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2488,
            "mutability": "mutable",
            "name": "_photoExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2679,
            "src": "352:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 2487,
              "keyType": {
                "id": 2485,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "360:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "352:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 2486,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "368:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2495,
              "nodeType": "Block",
              "src": "436:5:2",
              "statements": []
            },
            "documentation": null,
            "id": 2496,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50686f746f",
                    "id": 2491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "414:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0cd4a4bc081385231480fe39157001287f8cda715836354d304edf2543a7010b",
                      "typeString": "literal_string \"Photo\""
                    },
                    "value": "Photo"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "504943",
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "422:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6b749f7c8e1e83206ed83ad2813cfac0d13231da4ab361317f917e1e907b947e",
                      "typeString": "literal_string \"PIC\""
                    },
                    "value": "PIC"
                  }
                ],
                "id": 2493,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2490,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2405,
                  "src": "407:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2405_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "407:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:2"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:2"
            },
            "scope": 2679,
            "src": "392:49:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2531,
              "nodeType": "Block",
              "src": "521:188:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2502,
                            "name": "_photoExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2488,
                            "src": "534:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2505,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2503,
                              "name": "_photo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2498,
                              "src": "547:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                                "typeString": "struct photoToken.Photo memory"
                              }
                            },
                            "id": 2504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "photo_id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "547:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "534:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "567:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "534:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70686f746f5f696420616c726561647920657869737473",
                        "id": 2508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "574:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        },
                        "value": "photo_id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        }
                      ],
                      "id": 2501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "526:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "526:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2514,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2498,
                        "src": "617:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2511,
                        "name": "photos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "605:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Photo_$2477_storage_$dyn_storage",
                          "typeString": "struct photoToken.Photo storage ref[] storage ref"
                        }
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "605:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Photo_$2477_storage_$returns$__$",
                        "typeString": "function (struct photoToken.Photo storage ref)"
                      }
                    },
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "605:19:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2517,
                        "name": "_photoExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "629:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2520,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2518,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2498,
                          "src": "642:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "642:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "629:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "661:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "629:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2523,
                  "nodeType": "ExpressionStatement",
                  "src": "629:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "676:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "676:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2527,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2498,
                          "src": "688:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "688:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2524,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "670:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "670:34:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9d6ff9d0",
            "id": 2532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2532,
                  "src": "493:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2497,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2477,
                    "src": "493:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "492:21:2"
            },
            "returnParameters": {
              "id": 2500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:2"
            },
            "scope": 2679,
            "src": "479:230:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2543,
              "nodeType": "Block",
              "src": "781:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2540,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "807:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2539,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "799:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2538,
                  "id": 2542,
                  "nodeType": "Return",
                  "src": "792:23:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bdebb525",
            "id": 2544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerof",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2534,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2544,
                  "src": "734:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "733:17:2"
            },
            "returnParameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2544,
                  "src": "772:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:9:2"
            },
            "scope": 2679,
            "src": "717:106:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2555,
              "nodeType": "Block",
              "src": "895:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2552,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2546,
                        "src": "923:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2551,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "913:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "913:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2550,
                  "id": 2554,
                  "nodeType": "Return",
                  "src": "906:23:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3d64125b",
            "id": 2556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceof",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2546,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2556,
                  "src": "850:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "849:15:2"
            },
            "returnParameters": {
              "id": 2550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2549,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2556,
                  "src": "886:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "885:9:2"
            },
            "scope": 2679,
            "src": "831:106:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2625,
              "nodeType": "Block",
              "src": "1116:333:2",
              "statements": [
                {
                  "assignments": [
                    2564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2564,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2625,
                      "src": "1127:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2563,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1127:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2566,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1140:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1127:14:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2567,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "1156:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "1156:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1171:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1156:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2571,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "1176:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2572,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "1176:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1191:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "1176:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1156:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2581,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "1227:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2474,
                          "src": "1227:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1241:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1227:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2585,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "1247:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2586,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2474,
                          "src": "1247:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1262:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1247:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1227:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2595,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "1299:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2596,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2474,
                          "src": "1299:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1313:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1299:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2604,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "1347:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1355:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1347:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2607,
                        "nodeType": "ExpressionStatement",
                        "src": "1347:9:2"
                      },
                      "id": 2608,
                      "nodeType": "IfStatement",
                      "src": "1295:61:2",
                      "trueBody": {
                        "id": 2603,
                        "nodeType": "Block",
                        "src": "1318:14:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 2599,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2564,
                                "src": "1319:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "323030",
                                "id": 2600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1327:3:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "1319:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2602,
                            "nodeType": "ExpressionStatement",
                            "src": "1319:11:2"
                          }
                        ]
                      }
                    },
                    "id": 2609,
                    "nodeType": "IfStatement",
                    "src": "1223:133:2",
                    "trueBody": {
                      "id": 2594,
                      "nodeType": "Block",
                      "src": "1266:14:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 2590,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2564,
                              "src": "1267:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 2591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1275:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "1267:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2593,
                          "nodeType": "ExpressionStatement",
                          "src": "1267:11:2"
                        }
                      ]
                    }
                  },
                  "id": 2610,
                  "nodeType": "IfStatement",
                  "src": "1152:204:2",
                  "trueBody": {
                    "id": 2580,
                    "nodeType": "Block",
                    "src": "1195:13:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2576,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "1196:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3530",
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1204:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "1196:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2579,
                        "nodeType": "ExpressionStatement",
                        "src": "1196:10:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2611,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "1371:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      },
                      "id": 2612,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "originality",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2476,
                      "src": "1371:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1393:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1371:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2622,
                  "nodeType": "IfStatement",
                  "src": "1367:52:2",
                  "trueBody": {
                    "id": 2621,
                    "nodeType": "Block",
                    "src": "1399:20:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2615,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "1400:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2616,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2564,
                              "src": "1408:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1416:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1408:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1400:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2620,
                        "nodeType": "ExpressionStatement",
                        "src": "1400:17:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2623,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2564,
                    "src": "1436:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2562,
                  "id": 2624,
                  "nodeType": "Return",
                  "src": "1429:12:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ee21e10b",
            "id": 2626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "look_up",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2558,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2626,
                  "src": "1069:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2557,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2477,
                    "src": "1069:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1068:21:2"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2626,
                  "src": "1110:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2560,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1109:6:2"
            },
            "scope": 2679,
            "src": "1052:397:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2677,
              "nodeType": "Block",
              "src": "1585:349:2",
              "statements": [
                {
                  "assignments": [
                    2636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2636,
                      "mutability": "mutable",
                      "name": "requiredValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2677,
                      "src": "1596:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2635,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1596:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2640,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2638,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "1625:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "id": 2637,
                      "name": "look_up",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2626,
                      "src": "1617:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Photo_$2477_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct photoToken.Photo memory) pure returns (uint256)"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1596:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2642,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2630,
                          "src": "1651:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2643,
                          "name": "requiredValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2636,
                          "src": "1660:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f72726563742076616c75652073656e74",
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1674:22:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        },
                        "value": "Incorrect value sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        }
                      ],
                      "id": 2641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1643:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:54:2"
                },
                {
                  "assignments": [
                    2649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2649,
                      "mutability": "mutable",
                      "name": "photoOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2677,
                      "src": "1708:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2648,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1708:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2654,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2651,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2628,
                          "src": "1737:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "1737:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2650,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1604,
                      "src": "1729:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1708:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2655,
                        "name": "etherBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "1764:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2657,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2656,
                        "name": "photoOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1777:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1764:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2658,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2630,
                      "src": "1792:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1764:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2661,
                        "name": "etherBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "1810:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2663,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2662,
                        "name": "photoOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1823:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1810:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2664,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2630,
                      "src": "1838:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1810:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:35:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2668,
                        "name": "photoOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1866:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2669,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1877:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1877:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2671,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2628,
                          "src": "1888:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2672,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "1888:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2667,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2262,
                      "src": "1856:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2674,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:48:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1922:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2634,
                  "id": 2676,
                  "nodeType": "Return",
                  "src": "1915:11:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d8b2d714",
            "id": 2678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2678,
                  "src": "1523:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2477_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2627,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2477,
                    "src": "1523:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2477_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2678,
                  "src": "1543:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:34:2"
            },
            "returnParameters": {
              "id": 2634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2633,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2678,
                  "src": "1580:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2632,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:6:2"
            },
            "scope": 2679,
            "src": "1505:429:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2680,
        "src": "125:1814:2"
      }
    ],
    "src": "37:1902:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.9+commit.3e3065ac.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-09T01:30:24.057Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |=== Requirements: - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}