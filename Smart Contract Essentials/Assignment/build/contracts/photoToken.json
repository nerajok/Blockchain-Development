{
  "contractName": "photoToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "photos",
      "outputs": [
        {
          "internalType": "string",
          "name": "photo_id",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "originality",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "photo_id",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "originality",
              "type": "bool"
            }
          ],
          "internalType": "struct photoToken.Photo",
          "name": "_photo",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "photo_id",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "originality",
              "type": "bool"
            }
          ],
          "internalType": "struct photoToken.Photo",
          "name": "_photo",
          "type": "tuple"
        }
      ],
      "name": "look_up",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "photo_id",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "originality",
              "type": "bool"
            }
          ],
          "internalType": "struct photoToken.Photo",
          "name": "_photo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"photo_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"internalType\":\"struct photoToken.Photo\",\"name\":\"_photo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"photo_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"internalType\":\"struct photoToken.Photo\",\"name\":\"_photo\",\"type\":\"tuple\"}],\"name\":\"look_up\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"photo_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"internalType\":\"struct photoToken.Photo\",\"name\":\"_photo\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"photos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"photo_id\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"originality\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |=== Requirements: - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol\":\"photoToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/ERC721.sol\":{\"keccak256\":\"0x754cb1fb86eddfad7fc1ab12bb01f56f15211351b4f8626ace884c5744b801e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac6784f0a3115a1e81bfefe5c322ac086177b418dc9e18222c8fdb45a77093d9\",\"dweb:/ipfs/QmVhMBDrGbvSyGB91PoJdtkCcBZp338PZfn1PLAKGZtSyR\"]},\"/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol\":{\"keccak256\":\"0x5027186283d2d4ee4bc01f4a8adb62257a163561b297c58e9579fa11fd14ef1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffb0a9a4165e9a790a5485a2fc1de257892c185c26a36872b88fb5bf36bfbd65\",\"dweb:/ipfs/QmW2u56WepLq8T1QkDppztbSjfRXUUUs3ECdwPWhff7dAJ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80636c0360eb116100ab578063aeaf4f571161006f578063aeaf4f571461042a578063af2a5d6f1461045a578063b88d4fde14610499578063c87b56dd146104c2578063e8cc1085146104ff578063e985e9c5146105285761012a565b80636c0360eb1461033157806370a082311461035c57806395d89b41146103995780639a4f824c146103c4578063a22cb465146104015761012a565b806323b872dd116100f257806323b872dd146102285780632f745c591461025157806342842e0e1461028e5780634f6ccce7146102b75780636352211e146102f45761012a565b806301ffc9a71461012f57806306fdde031461016c578063081812fc14610197578063095ea7b3146101d457806318160ddd146101fd575b600080fd5b34801561013b57600080fd5b506101566004803603810190610151919061249a565b610565565b6040516101639190612e09565b60405180910390f35b34801561017857600080fd5b506101816105cc565b60405161018e9190612e24565b60405180910390f35b3480156101a357600080fd5b506101be60048036038101906101b99190612581565b61066e565b6040516101cb9190612da2565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f6919061245e565b6106f3565b005b34801561020957600080fd5b5061021261080b565b60405161021f91906130a4565b60405180910390f35b34801561023457600080fd5b5061024f600480360381019061024a9190612358565b61081c565b005b34801561025d57600080fd5b506102786004803603810190610273919061245e565b61087c565b60405161028591906130a4565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190612358565b6108d7565b005b3480156102c357600080fd5b506102de60048036038101906102d99190612581565b6108f7565b6040516102eb91906130a4565b60405180910390f35b34801561030057600080fd5b5061031b60048036038101906103169190612581565b61091a565b6040516103289190612da2565b60405180910390f35b34801561033d57600080fd5b50610346610951565b6040516103539190612e24565b60405180910390f35b34801561036857600080fd5b50610383600480360381019061037e91906122f3565b6109f3565b60405161039091906130a4565b60405180910390f35b3480156103a557600080fd5b506103ae610ab2565b6040516103bb9190612e24565b60405180910390f35b3480156103d057600080fd5b506103eb60048036038101906103e691906124ec565b610b54565b6040516103f891906130a4565b60405180910390f35b34801561040d57600080fd5b5061042860048036038101906104239190612422565b610be8565b005b610444600480360381019061043f919061252d565b610d69565b6040516104519190612e09565b60405180910390f35b34801561046657600080fd5b50610481600480360381019061047c9190612581565b610dc0565b60405161049093929190612e46565b60405180910390f35b3480156104a557600080fd5b506104c060048036038101906104bb91906123a7565b610e9c565b005b3480156104ce57600080fd5b506104e960048036038101906104e49190612581565b610efe565b6040516104f69190612e24565b60405180910390f35b34801561050b57600080fd5b50610526600480360381019061052191906124ec565b611089565b005b34801561053457600080fd5b5061054f600480360381019061054a919061231c565b6111ca565b60405161055c9190612e09565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106645780601f1061063957610100808354040283529160200191610664565b820191906000526020600020905b81548152906001019060200180831161064757829003601f168201915b5050505050905090565b60006106798261125e565b6106b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106af90613004565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106fe8261091a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076690613064565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661078e61127b565b73ffffffffffffffffffffffffffffffffffffffff1614806107bd57506107bc816107b761127b565b6111ca565b5b6107fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f390612f84565b60405180910390fd5b6108068383611283565b505050565b6000610817600261133c565b905090565b61082d61082761127b565b82611351565b61086c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086390613084565b60405180910390fd5b61087783838361142f565b505050565b60006108cf82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061164690919063ffffffff16565b905092915050565b6108f283838360405180602001604052806000815250610e9c565b505050565b60008061090e83600261166090919063ffffffff16565b50905080915050919050565b600061094a826040518060600160405280602981526020016132dd60299139600261168f9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5b90612fa4565b60405180910390fd5b610aab600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206116ae565b9050919050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b5050505050905090565b600080600090506000836020015110158015610b755750600a836020015111155b15610b835760329050610bc7565b600a8360200151118015610b9c57506014836020015111155b15610baa5760649050610bc6565b601483602001511115610bc05760c89050610bc5565b600090505b5b5b60011515836040015115151415610bdf576002810290505b80915050919050565b610bf061127b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5590612f24565b60405180910390fd5b8060056000610c6b61127b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610d1861127b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d5d9190612e09565b60405180910390a35050565b600080610d7584610b54565b9050808314610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db090612f44565b60405180910390fd5b5092915050565b600a8181548110610dcd57fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e795780601f10610e4e57610100808354040283529160200191610e79565b820191906000526020600020905b815481529060010190602001808311610e5c57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b610ead610ea761127b565b83611351565b610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390613084565b60405180910390fd5b610ef8848484846116c3565b50505050565b6060610f098261125e565b610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f90613044565b60405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ff15780601f10610fc657610100808354040283529160200191610ff1565b820191906000526020600020905b815481529060010190602001808311610fd457829003601f168201915b505050505090506000600980546001816001161561010002031660029004905014156110205780915050611084565b6000815111156110555760098160405160200161103e929190612d7e565b604051602081830303815290604052915050611084565b60096110608461171f565b604051602001611071929190612d7e565b6040516020818303038152906040529150505b919050565b60001515600b82600001516040516110a19190612d67565b908152602001604051809103902060009054906101000a900460ff161515146110ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f690612ea4565b60405180910390fd5b600a81908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906111479291906120c5565b506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505060006001600a805490500390506001600b83600001516040516111979190612d67565b908152602001604051809103902060006101000a81548160ff0219169083151502179055506111c63382611866565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006112748260026119f490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166112f68361091a565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061134a82600001611a0e565b9050919050565b600061135c8261125e565b61139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139290612f64565b60405180910390fd5b60006113a68361091a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061141557508373ffffffffffffffffffffffffffffffffffffffff166113fd8461066e565b73ffffffffffffffffffffffffffffffffffffffff16145b80611426575061142581856111ca565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661144f8261091a565b73ffffffffffffffffffffffffffffffffffffffff16146114a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149c90613024565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150c90612f04565b60405180910390fd5b611520838383611a1f565b61152b600082611283565b61157c81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a2490919063ffffffff16565b506115ce81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a3e90919063ffffffff16565b506115e581836002611a589092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006116558360000183611a8d565b60001c905092915050565b6000806000806116738660000186611afa565b915091508160001c8160001c8090509350935050509250929050565b60006116a2846000018460001b84611b7d565b60001c90509392505050565b60006116bc82600001611c0e565b9050919050565b6116ce84848461142f565b6116da84848484611c1f565b611719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171090612ec4565b60405180910390fd5b50505050565b60606000821415611767576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611861565b600082905060005b60008214611791578080600101915050600a828161178957fe5b04915061176f565b60608167ffffffffffffffff811180156117aa57600080fd5b506040519080825280601f01601f1916602001820160405280156117dd5781602001600182028036833780820191505090505b50905060006001830390508593505b6000841461185957600a84816117fe57fe5b0660300160f81b8282806001900393508151811061181857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161185157fe5b0493506117ec565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cd90612fe4565b60405180910390fd5b6118df8161125e565b1561191f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191690612ee4565b60405180910390fd5b61192b60008383611a1f565b61197c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a3e90919063ffffffff16565b5061199381836002611a589092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000611a06836000018360001b611e00565b905092915050565b600081600001805490509050919050565b505050565b6000611a36836000018360001b611e23565b905092915050565b6000611a50836000018360001b611f0b565b905092915050565b6000611a84846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b611f7b565b90509392505050565b600081836000018054905011611ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611acf90612e84565b60405180910390fd5b826000018281548110611ae757fe5b9060005260206000200154905092915050565b60008082846000018054905011611b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3d90612fc4565b60405180910390fd5b6000846000018481548110611b5757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd69190612e24565b60405180910390fd5b50846000016001820381548110611bf257fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000611c408473ffffffffffffffffffffffffffffffffffffffff16612057565b611c4d5760019050611df8565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b611c7861127b565b898888604051602401611c8e9493929190612dbd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611cf89190612d50565b6000604051808303816000865af19150503d8060008114611d35576040519150601f19603f3d011682016040523d82523d6000602084013e611d3a565b606091505b509150915081611d9257600081511115611d575780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8990612ec4565b60405180910390fd5b600081806020019051810190611da891906124c3565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114611eff5760006001820390506000600186600001805490500390506000866000018281548110611e6e57fe5b9060005260206000200154905080876000018481548110611e8b57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611ec357fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611f05565b60009150505b92915050565b6000611f1783836120a2565b611f70578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611f75565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561202257846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612050565b8285600001600183038154811061203557fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561209957506000801b8214155b92505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061210657805160ff1916838001178555612134565b82800160010185558215612134579182015b82811115612133578251825591602001919060010190612118565b5b5090506121419190612145565b5090565b61216791905b8082111561216357600081600090555060010161214b565b5090565b90565b60008135905061217981613280565b92915050565b60008135905061218e81613297565b92915050565b6000813590506121a3816132ae565b92915050565b6000815190506121b8816132ae565b92915050565b600082601f8301126121cf57600080fd5b81356121e26121dd826130ec565b6130bf565b915080825260208301602083018583830111156121fe57600080fd5b61220983828461322d565b50505092915050565b600082601f83011261222357600080fd5b813561223661223182613118565b6130bf565b9150808252602083016020830185838301111561225257600080fd5b61225d83828461322d565b50505092915050565b60006060828403121561227857600080fd5b61228260606130bf565b9050600082013567ffffffffffffffff81111561229e57600080fd5b6122aa84828501612212565b60008301525060206122be848285016122de565b60208301525060406122d28482850161217f565b60408301525092915050565b6000813590506122ed816132c5565b92915050565b60006020828403121561230557600080fd5b60006123138482850161216a565b91505092915050565b6000806040838503121561232f57600080fd5b600061233d8582860161216a565b925050602061234e8582860161216a565b9150509250929050565b60008060006060848603121561236d57600080fd5b600061237b8682870161216a565b935050602061238c8682870161216a565b925050604061239d868287016122de565b9150509250925092565b600080600080608085870312156123bd57600080fd5b60006123cb8782880161216a565b94505060206123dc8782880161216a565b93505060406123ed878288016122de565b925050606085013567ffffffffffffffff81111561240a57600080fd5b612416878288016121be565b91505092959194509250565b6000806040838503121561243557600080fd5b60006124438582860161216a565b92505060206124548582860161217f565b9150509250929050565b6000806040838503121561247157600080fd5b600061247f8582860161216a565b9250506020612490858286016122de565b9150509250929050565b6000602082840312156124ac57600080fd5b60006124ba84828501612194565b91505092915050565b6000602082840312156124d557600080fd5b60006124e3848285016121a9565b91505092915050565b6000602082840312156124fe57600080fd5b600082013567ffffffffffffffff81111561251857600080fd5b61252484828501612266565b91505092915050565b6000806040838503121561254057600080fd5b600083013567ffffffffffffffff81111561255a57600080fd5b61256685828601612266565b9250506020612577858286016122de565b9150509250929050565b60006020828403121561259357600080fd5b60006125a1848285016122de565b91505092915050565b6125b3816131b9565b82525050565b6125c2816131a7565b82525050565b6125d1816131cb565b82525050565b60006125e282613159565b6125ec818561316f565b93506125fc81856020860161323c565b6126058161326f565b840191505092915050565b600061261b82613159565b6126258185613180565b935061263581856020860161323c565b80840191505092915050565b600061264c82613164565b612656818561318b565b935061266681856020860161323c565b61266f8161326f565b840191505092915050565b600061268582613164565b61268f818561319c565b935061269f81856020860161323c565b80840191505092915050565b6000815460018116600081146126c857600181146126ed57612731565b607f60028304166126d9818761319c565b955060ff1983168652808601935050612731565b600282046126fb818761319c565b955061270685613144565b60005b8281101561272857815481890152600182019150602081019050612709565b82880195505050505b505092915050565b600061274660228361318b565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127ac60178361318b565b91507f70686f746f5f696420616c7265616479206578697374730000000000000000006000830152602082019050919050565b60006127ec60328361318b565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612852601c8361318b565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b600061289260248361318b565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006128f860198361318b565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b600061293860148361318b565b91507f496e636f72726563742076616c75652073656e740000000000000000000000006000830152602082019050919050565b6000612978602c8361318b565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006129de60388361318b565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612a44602a8361318b565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612aaa60228361318b565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b1060208361318b565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612b50602c8361318b565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612bb660298361318b565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c1c602f8361318b565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000612c8260218361318b565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ce860318361318b565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b612d4a81613223565b82525050565b6000612d5c8284612610565b915081905092915050565b6000612d73828461267a565b915081905092915050565b6000612d8a82856126ab565b9150612d96828461267a565b91508190509392505050565b6000602082019050612db760008301846125b9565b92915050565b6000608082019050612dd260008301876125aa565b612ddf60208301866125b9565b612dec6040830185612d41565b8181036060830152612dfe81846125d7565b905095945050505050565b6000602082019050612e1e60008301846125c8565b92915050565b60006020820190508181036000830152612e3e8184612641565b905092915050565b60006060820190508181036000830152612e608186612641565b9050612e6f6020830185612d41565b612e7c60408301846125c8565b949350505050565b60006020820190508181036000830152612e9d81612739565b9050919050565b60006020820190508181036000830152612ebd8161279f565b9050919050565b60006020820190508181036000830152612edd816127df565b9050919050565b60006020820190508181036000830152612efd81612845565b9050919050565b60006020820190508181036000830152612f1d81612885565b9050919050565b60006020820190508181036000830152612f3d816128eb565b9050919050565b60006020820190508181036000830152612f5d8161292b565b9050919050565b60006020820190508181036000830152612f7d8161296b565b9050919050565b60006020820190508181036000830152612f9d816129d1565b9050919050565b60006020820190508181036000830152612fbd81612a37565b9050919050565b60006020820190508181036000830152612fdd81612a9d565b9050919050565b60006020820190508181036000830152612ffd81612b03565b9050919050565b6000602082019050818103600083015261301d81612b43565b9050919050565b6000602082019050818103600083015261303d81612ba9565b9050919050565b6000602082019050818103600083015261305d81612c0f565b9050919050565b6000602082019050818103600083015261307d81612c75565b9050919050565b6000602082019050818103600083015261309d81612cdb565b9050919050565b60006020820190506130b96000830184612d41565b92915050565b6000604051905081810181811067ffffffffffffffff821117156130e257600080fd5b8060405250919050565b600067ffffffffffffffff82111561310357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561312f57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006131b282613203565b9050919050565b60006131c482613203565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561325a57808201518184015260208101905061323f565b83811115613269576000848401525b50505050565b6000601f19601f8301169050919050565b613289816131a7565b811461329457600080fd5b50565b6132a0816131cb565b81146132ab57600080fd5b50565b6132b7816131d7565b81146132c257600080fd5b50565b6132ce81613223565b81146132d957600080fd5b5056fe4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea26469706673582212205a19f5e010d324d2b429e5c73313be99801e54ca2239289e543fda3ac037fd3564736f6c63430006090033",
  "immutableReferences": {},
  "sourceMap": "125:1133:2:-:0;;;328:49;;;;;;;;;;39121:365:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10081:40;9748:10;10100:20;;10081:18;;;:40;;:::i;:::-;39201:4;39193:5;:12;;;;;;;;;;;;:::i;:::-;;39225:6;39215:7;:16;;;;;;;;;;;;:::i;:::-;;39319:40;38399:10;39338:20;;39319:18;;;:40;;:::i;:::-;39369:49;38731:10;39388:29;;39369:18;;;:49;;:::i;:::-;39428:51;39104:10;39447:31;;39428:18;;;:51;;:::i;:::-;39121:365;;125:1133:2;;10812:198:0;10910:10;10895:25;;:11;:25;;;;;10887:66;;;;;;;;;;;;;;;;;;;;;;10999:4;10963:20;:33;10984:11;10963:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;10812:198;:::o;125:1133:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;;342:416;;542:2;531:9;527:18;519:26;;592:9;586:4;582:20;578:1;567:9;563:17;556:47;617:131;743:4;617:131;;;609:139;;513:245;;;;766:163;;881:6;876:3;869:19;918:4;913:3;909:14;894:29;;862:67;;;;;125:1133:2;;;;;;;",
  "deployedSourceMap": "125:1133:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10278:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;40392:90;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;45052:209;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;44386:381;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;43266:200;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;46763:300;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;42961:152;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;47712:149;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;43804:161;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;40120:167;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;42500:87;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;39690:211;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;40591:94;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;638:397:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;45560:290:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1043:210:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;259:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;48584:282:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;41528:740;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;382:251:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;46172:154:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10278:140;10355:4;10378:20;:33;10399:11;10378:33;;;;;;;;;;;;;;;;;;;;;;;;;;;10371:40;;10278:140;;;:::o;40392:90::-;40438:13;40470:5;40463:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40392:90;:::o;45052:209::-;45120:7;45147:16;45155:7;45147;:16::i;:::-;45139:73;;;;;;;;;;;;;;;;;;;;;;45230:15;:24;45246:7;45230:24;;;;;;;;;;;;;;;;;;;;;45223:31;;45052:209;;;:::o;44386:381::-;44466:13;44482:16;44490:7;44482;:16::i;:::-;44466:32;;44522:5;44516:11;;:2;:11;;;;44508:57;;;;;;;;;;;;;;;;;;;;;;44600:5;44584:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;44609:37;44626:5;44633:12;:10;:12::i;:::-;44609:16;:37::i;:::-;44584:62;44576:152;;;;;;;;;;;;;;;;;;;;;;44739:21;44748:2;44752:7;44739:8;:21::i;:::-;44386:381;;;:::o;43266:200::-;43319:7;43438:21;:12;:19;:21::i;:::-;43431:28;;43266:200;:::o;46763:300::-;46922:41;46941:12;:10;:12::i;:::-;46955:7;46922:18;:41::i;:::-;46914:103;;;;;;;;;;;;;;;;;;;;;;47028:28;47038:4;47044:2;47048:7;47028:9;:28::i;:::-;46763:300;;;:::o;42961:152::-;43050:7;43076:30;43100:5;43076:13;:20;43090:5;43076:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;43069:37;;42961:152;;;;:::o;47712:149::-;47815:39;47832:4;47838:2;47842:7;47815:39;;;;;;;;;;;;:16;:39::i;:::-;47712:149;;;:::o;43804:161::-;43871:7;43891:15;43912:22;43928:5;43912:12;:15;;:22;;;;:::i;:::-;43890:44;;;43951:7;43944:14;;;43804:161;;;:::o;40120:167::-;40184:7;40210:70;40227:7;40210:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;40203:77;;40120:167;;;:::o;42500:87::-;42540:13;42572:8;42565:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42500:87;:::o;39690:211::-;39754:7;39798:1;39781:19;;:5;:19;;;;39773:74;;;;;;;;;;;;;;;;;;;;;;39865:29;:13;:20;39879:5;39865:20;;;;;;;;;;;;;;;:27;:29::i;:::-;39858:36;;39690:211;;;:::o;40591:94::-;40639:13;40671:7;40664:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40591:94;:::o;638:397:2:-;696:4;713:10;726:1;713:14;;757:1;742:6;:11;;;:16;;:37;;;;;777:2;762:6;:11;;;:17;;742:37;738:204;;;790:2;782:10;;738:204;;;827:2;813:6;:11;;;:16;:37;;;;;848:2;833:6;:11;;;:17;;813:37;809:133;;;861:3;853:11;;809:133;;;899:2;885:6;:11;;;:16;881:61;;;913:3;905:11;;881:61;;;941:1;933:9;;881:61;809:133;738:204;979:4;957:26;;:6;:18;;;:26;;;953:52;;;1002:1;994:5;:9;986:17;;953:52;1022:5;1015:12;;;638:397;;;:::o;45560:290:0:-;45674:12;:10;:12::i;:::-;45662:24;;:8;:24;;;;45654:62;;;;;;;;;;;;;;;;;;;;;;45772:8;45727:18;:32;45746:12;:10;:12::i;:::-;45727:32;;;;;;;;;;;;;;;:42;45760:8;45727:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;45824:8;45795:48;;45810:12;:10;:12::i;:::-;45795:48;;;45834:8;45795:48;;;;;;;;;;;;;;;45560:290;;:::o;1043:210:2:-;1118:4;1134:18;1155:15;1163:6;1155:7;:15::i;:::-;1134:36;;1198:13;1189:7;:22;1181:54;;;;;;;;;;;;;;;;;;;;;;1043:210;;;;;:::o;259:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;48584:282:0:-;48715:41;48734:12;:10;:12::i;:::-;48748:7;48715:18;:41::i;:::-;48707:103;;;;;;;;;;;;;;;;;;;;;;48820:39;48834:4;48840:2;48844:7;48853:5;48820:13;:39::i;:::-;48584:282;;;;:::o;41528:740::-;41593:13;41626:16;41634:7;41626;:16::i;:::-;41618:76;;;;;;;;;;;;;;;;;;;;;;41705:23;41731:10;:19;41742:7;41731:19;;;;;;;;;;;41705:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41849:1;41829:8;41823:22;;;;;;;;;;;;;;;;:27;41819:74;;;41873:9;41866:16;;;;;41819:74;42021:1;42001:9;41995:23;:27;41991:110;;;42069:8;42079:9;42052:37;;;;;;;;;;;;;;;;;;;;;;;42038:52;;;;;41991:110;42231:8;42241:18;:7;:16;:18::i;:::-;42214:46;;;;;;;;;;;;;;;;;;;;;;;42200:61;;;41528:740;;;;:::o;382:251:2:-;470:5;437:38;;:12;450:6;:15;;;437:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;429:74;;;;;;;;;;;;;;;;;;;;;;508:6;520;508:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:8;559:1;543:6;:13;;;;:17;532:28;;597:4;565:12;578:6;:15;;;565:29;;;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;606:22;612:10;624:3;606:5;:22::i;:::-;382:251;;:::o;46172:154:0:-;46261:4;46284:18;:25;46303:5;46284:25;;;;;;;;;;;;;;;:35;46310:8;46284:35;;;;;;;;;;;;;;;;;;;;;;;;;46277:42;;46172:154;;;;:::o;50035:117::-;50092:4;50115:30;50137:7;50115:12;:21;;:30;;;;:::i;:::-;50108:37;;50035:117;;;:::o;816:104::-;869:15;903:10;896:17;;816:104;:::o;57059:155::-;57151:2;57124:15;:24;57140:7;57124:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;57199:7;57195:2;57168:39;;57177:16;57185:7;57177;:16::i;:::-;57168:39;;;;;;;;;;;;57059:155;;:::o;33765:121::-;33834:7;33860:19;33868:3;:10;;33860:7;:19::i;:::-;33853:26;;33765:121;;;:::o;50513:329::-;50598:4;50622:16;50630:7;50622;:16::i;:::-;50614:73;;;;;;;;;;;;;;;;;;;;;;50697:13;50713:16;50721:7;50713;:16::i;:::-;50697:32;;50758:5;50747:16;;:7;:16;;;:51;;;;50791:7;50767:31;;:20;50779:7;50767:11;:20::i;:::-;:31;;;50747:51;:87;;;;50802:32;50819:5;50826:7;50802:16;:32::i;:::-;50747:87;50739:96;;;50513:329;;;;:::o;54025:559::-;54142:4;54122:24;;:16;54130:7;54122;:16::i;:::-;:24;;;54114:78;;;;;;;;;;;;;;;;;;;;;;54224:1;54210:16;;:2;:16;;;;54202:65;;;;;;;;;;;;;;;;;;;;;;54278:39;54299:4;54305:2;54309:7;54278:20;:39::i;:::-;54379:29;54396:1;54400:7;54379:8;:29::i;:::-;54419:35;54446:7;54419:13;:19;54433:4;54419:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;54464:30;54486:7;54464:13;:17;54478:2;54464:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;54505:29;54522:7;54531:2;54505:12;:16;;:29;;;;;:::i;:::-;;54569:7;54565:2;54550:27;;54559:4;54550:27;;;;;;;;;;;;54025:559;;;:::o;26578:135::-;26649:7;26683:22;26687:3;:10;;26699:5;26683:3;:22::i;:::-;26675:31;;26668:38;;26578:135;;;;:::o;34214:224::-;34294:7;34303;34323:11;34336:13;34353:22;34357:3;:10;;34369:5;34353:3;:22::i;:::-;34322:53;;;;34401:3;34393:12;;34423:5;34415:14;;34385:46;;;;;;;;;34214:224;;;;;:::o;34857:202::-;34964:7;35006:44;35011:3;:10;;35031:3;35023:12;;35037;35006:4;:44::i;:::-;34998:53;;34983:69;;34857:202;;;;;:::o;26134:112::-;26194:7;26220:19;26228:3;:10;;26220:7;:19::i;:::-;26213:26;;26134:112;;;:::o;49571:269::-;49684:28;49694:4;49700:2;49704:7;49684:9;:28::i;:::-;49730:48;49753:4;49759:2;49763:7;49772:5;49730:22;:48::i;:::-;49722:111;;;;;;;;;;;;;;;;;;;;;;49571:269;;;;:::o;35284:723::-;35340:13;35566:1;35557:5;:10;35553:51;;;35583:10;;;;;;;;;;;;;;;;;;;;;35553:51;35613:12;35628:5;35613:20;;35643:14;35667:75;35682:1;35674:4;:9;35667:75;;35699:8;;;;;;;35729:2;35721:10;;;;;;;;;35667:75;;;35751:19;35783:6;35773:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35751:39;;35800:13;35825:1;35816:6;:10;35800:26;;35843:5;35836:12;;35858:112;35873:1;35865:4;:9;35858:112;;35931:2;35924:4;:9;;;;;;35919:2;:14;35908:27;;35890:6;35897:7;;;;;;;35890:15;;;;;;;;;;;:45;;;;;;;;;;;35957:2;35949:10;;;;;;;;;35858:112;;;35993:6;35979:21;;;;;;35284:723;;;;:::o;52572:393::-;52665:1;52651:16;;:2;:16;;;;52643:61;;;;;;;;;;;;;;;;;;;;;;52723:16;52731:7;52723;:16::i;:::-;52722:17;52714:58;;;;;;;;;;;;;;;;;;;;;;52783:45;52812:1;52816:2;52820:7;52783:20;:45::i;:::-;52839:30;52861:7;52839:13;:17;52853:2;52839:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;52880:29;52897:7;52906:2;52880:12;:16;;:29;;;;;:::i;:::-;;52950:7;52946:2;52925:33;;52942:1;52925:33;;;;;;;;;;;;52572:393;;:::o;33533:149::-;33617:4;33640:35;33650:3;:10;;33670:3;33662:12;;33640:9;:35::i;:::-;33633:42;;33533:149;;;;:::o;31225:108::-;31281:7;31307:3;:12;;:19;;;;31300:26;;31225:108;;;:::o;57770:93::-;;;;:::o;25693:135::-;25763:4;25786:35;25794:3;:10;;25814:5;25806:14;;25786:7;:35::i;:::-;25779:42;;25693:135;;;;:::o;25396:129::-;25463:4;25486:32;25491:3;:10;;25511:5;25503:14;;25486:4;:32::i;:::-;25479:39;;25396:129;;;;:::o;32981:174::-;33070:4;33093:55;33098:3;:10;;33118:3;33110:12;;33140:5;33132:14;;33124:23;;33093:4;:55::i;:::-;33086:62;;32981:174;;;;;:::o;23352:201::-;23419:7;23467:5;23446:3;:11;;:18;;;;:26;23438:73;;;;;;;;;;;;;;;;;;;;;;23528:3;:11;;23540:5;23528:18;;;;;;;;;;;;;;;;23521:25;;23352:201;;;;:::o;31676:274::-;31743:7;31752;31801:5;31779:3;:12;;:19;;;;:27;31771:74;;;;;;;;;;;;;;;;;;;;;;31856:22;31881:3;:12;;31894:5;31881:19;;;;;;;;;;;;;;;;;;31856:44;;31918:5;:10;;;31930:5;:12;;;31910:33;;;;;31676:274;;;;;:::o;32357:315::-;32451:7;32470:16;32489:3;:12;;:17;32502:3;32489:17;;;;;;;;;;;;32470:36;;32536:1;32524:8;:13;;32539:12;32516:36;;;;;;;;;;;;;;;;;;;;;;;;;32605:3;:12;;32629:1;32618:8;:12;32605:26;;;;;;;;;;;;;;;;;;:33;;;32598:40;;;32357:315;;;;;:::o;22913:107::-;22969:7;22995:3;:11;;:18;;;;22988:25;;22913:107;;;:::o;56003:1050::-;56123:4;56148:15;:2;:13;;;:15::i;:::-;56143:58;;56186:4;56179:11;;;;56143:58;56270:12;56284:23;56311:2;:7;;56355:45;;;56414:12;:10;:12::i;:::-;56440:4;56458:7;56479:5;56319:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56311:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56269:226;;;;56510:7;56505:542;;56557:1;56537:10;:17;:21;56533:376;;;56702:10;56696:17;56762:15;56749:10;56745:2;56741:19;56734:44;56651:145;56834:60;;;;;;;;;;;;;;;;;;;56505:542;56939:13;56966:10;56955:32;;;;;;;;;;;;;;56939:48;;36737:10;57019:16;;57009:26;;;:6;:26;;;;57001:35;;;;;56003:1050;;;;;;;:::o;31012:123::-;31083:4;31127:1;31106:3;:12;;:17;31119:3;31106:17;;;;;;;;;;;;:22;;31099:29;;31012:123;;;;:::o;21112:1512::-;21178:4;21294:18;21315:3;:12;;:19;21328:5;21315:19;;;;;;;;;;;;21294:40;;21363:1;21349:10;:15;21345:1273;;21706:21;21743:1;21730:10;:14;21706:38;;21758:17;21799:1;21778:3;:11;;:18;;;;:22;21758:42;;22040:17;22060:3;:11;;22072:9;22060:22;;;;;;;;;;;;;;;;22040:42;;22203:9;22174:3;:11;;22186:13;22174:26;;;;;;;;;;;;;;;:38;;;;22320:1;22304:13;:17;22278:3;:12;;:23;22291:9;22278:23;;;;;;;;;;;:43;;;;22427:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;22519:3;:12;;:19;22532:5;22519:19;;;;;;;;;;;22512:26;;;22560:4;22553:11;;;;;;;;21345:1273;22602:5;22595:12;;;21112:1512;;;;;:::o;20540:404::-;20603:4;20624:21;20634:3;20639:5;20624:9;:21::i;:::-;20619:319;;20661:3;:11;;20678:5;20661:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20841:3;:11;;:18;;;;20819:3;:12;;:19;20832:5;20819:19;;;;;;;;;;;:40;;;;20880:4;20873:11;;;;20619:319;20922:5;20915:12;;20540:404;;;;;:::o;28570:678::-;28646:4;28760:16;28779:3;:12;;:17;28792:3;28779:17;;;;;;;;;;;;28760:36;;28823:1;28811:8;:13;28807:435;;;28877:3;:12;;28895:38;;;;;;;;28912:3;28895:38;;;;28925:5;28895:38;;;28877:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29089:3;:12;;:19;;;;29069:3;:12;;:17;29082:3;29069:17;;;;;;;;;;;:39;;;;29129:4;29122:11;;;;;28807:435;29200:5;29164:3;:12;;29188:1;29177:8;:12;29164:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;29226:5;29219:12;;;28570:678;;;;;;:::o;16982:610::-;17042:4;17300:16;17326:19;17348:66;17326:88;;;;17515:7;17503:20;17491:32;;17554:11;17542:8;:23;;:42;;;;;17581:3;17569:15;;:8;:15;;17542:42;17534:51;;;;16982:610;;;:::o;22705:127::-;22778:4;22824:1;22801:3;:12;;:19;22814:5;22801:19;;;;;;;;;;;;:24;;22794:31;;22705:127;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;408:132;;491:6;485:13;476:22;;503:32;529:5;503:32;;;470:70;;;;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;997:442;;1099:3;1092:4;1084:6;1080:17;1076:27;1066:2;;1117:1;1114;1107:12;1066:2;1154:6;1141:20;1176:65;1191:49;1233:6;1191:49;;;1176:65;;;1167:74;;1261:6;1254:5;1247:21;1297:4;1289:6;1285:17;1330:4;1323:5;1319:16;1365:3;1356:6;1351:3;1347:16;1344:25;1341:2;;;1382:1;1379;1372:12;1341:2;1392:41;1426:6;1421:3;1416;1392:41;;;1059:380;;;;;;;;1477:713;;1589:4;1577:9;1572:3;1568:19;1564:30;1561:2;;;1607:1;1604;1597:12;1561:2;1625:20;1640:4;1625:20;;;1616:29;;1727:1;1716:9;1712:17;1699:31;1750:18;1742:6;1739:30;1736:2;;;1782:1;1779;1772:12;1736:2;1817:59;1872:3;1863:6;1852:9;1848:22;1817:59;;;1810:4;1803:5;1799:16;1792:85;1655:233;1938:2;1971:49;2016:3;2007:6;1996:9;1992:22;1971:49;;;1964:4;1957:5;1953:16;1946:75;1898:134;2089:2;2122:46;2164:3;2155:6;2144:9;2140:22;2122:46;;;2115:4;2108:5;2104:16;2097:72;2042:138;1555:635;;;;;2197:130;;2277:6;2264:20;2255:29;;2289:33;2316:5;2289:33;;;2249:78;;;;;2334:241;;2438:2;2426:9;2417:7;2413:23;2409:32;2406:2;;;2454:1;2451;2444:12;2406:2;2489:1;2506:53;2551:7;2542:6;2531:9;2527:22;2506:53;;;2496:63;;2468:97;2400:175;;;;;2582:366;;;2703:2;2691:9;2682:7;2678:23;2674:32;2671:2;;;2719:1;2716;2709:12;2671:2;2754:1;2771:53;2816:7;2807:6;2796:9;2792:22;2771:53;;;2761:63;;2733:97;2861:2;2879:53;2924:7;2915:6;2904:9;2900:22;2879:53;;;2869:63;;2840:98;2665:283;;;;;;2955:491;;;;3093:2;3081:9;3072:7;3068:23;3064:32;3061:2;;;3109:1;3106;3099:12;3061:2;3144:1;3161:53;3206:7;3197:6;3186:9;3182:22;3161:53;;;3151:63;;3123:97;3251:2;3269:53;3314:7;3305:6;3294:9;3290:22;3269:53;;;3259:63;;3230:98;3359:2;3377:53;3422:7;3413:6;3402:9;3398:22;3377:53;;;3367:63;;3338:98;3055:391;;;;;;3453:721;;;;;3617:3;3605:9;3596:7;3592:23;3588:33;3585:2;;;3634:1;3631;3624:12;3585:2;3669:1;3686:53;3731:7;3722:6;3711:9;3707:22;3686:53;;;3676:63;;3648:97;3776:2;3794:53;3839:7;3830:6;3819:9;3815:22;3794:53;;;3784:63;;3755:98;3884:2;3902:53;3947:7;3938:6;3927:9;3923:22;3902:53;;;3892:63;;3863:98;4020:2;4009:9;4005:18;3992:32;4044:18;4036:6;4033:30;4030:2;;;4076:1;4073;4066:12;4030:2;4096:62;4150:7;4141:6;4130:9;4126:22;4096:62;;;4086:72;;3971:193;3579:595;;;;;;;;4181:360;;;4299:2;4287:9;4278:7;4274:23;4270:32;4267:2;;;4315:1;4312;4305:12;4267:2;4350:1;4367:53;4412:7;4403:6;4392:9;4388:22;4367:53;;;4357:63;;4329:97;4457:2;4475:50;4517:7;4508:6;4497:9;4493:22;4475:50;;;4465:60;;4436:95;4261:280;;;;;;4548:366;;;4669:2;4657:9;4648:7;4644:23;4640:32;4637:2;;;4685:1;4682;4675:12;4637:2;4720:1;4737:53;4782:7;4773:6;4762:9;4758:22;4737:53;;;4727:63;;4699:97;4827:2;4845:53;4890:7;4881:6;4870:9;4866:22;4845:53;;;4835:63;;4806:98;4631:283;;;;;;4921:239;;5024:2;5012:9;5003:7;4999:23;4995:32;4992:2;;;5040:1;5037;5030:12;4992:2;5075:1;5092:52;5136:7;5127:6;5116:9;5112:22;5092:52;;;5082:62;;5054:96;4986:174;;;;;5167:261;;5281:2;5269:9;5260:7;5256:23;5252:32;5249:2;;;5297:1;5294;5287:12;5249:2;5332:1;5349:63;5404:7;5395:6;5384:9;5380:22;5349:63;;;5339:73;;5311:107;5243:185;;;;;5435:373;;5562:2;5550:9;5541:7;5537:23;5533:32;5530:2;;;5578:1;5575;5568:12;5530:2;5641:1;5630:9;5626:17;5613:31;5664:18;5656:6;5653:30;5650:2;;;5696:1;5693;5686:12;5650:2;5716:76;5784:7;5775:6;5764:9;5760:22;5716:76;;;5706:86;;5592:206;5524:284;;;;;5815:498;;;5959:2;5947:9;5938:7;5934:23;5930:32;5927:2;;;5975:1;5972;5965:12;5927:2;6038:1;6027:9;6023:17;6010:31;6061:18;6053:6;6050:30;6047:2;;;6093:1;6090;6083:12;6047:2;6113:76;6181:7;6172:6;6161:9;6157:22;6113:76;;;6103:86;;5989:206;6226:2;6244:53;6289:7;6280:6;6269:9;6265:22;6244:53;;;6234:63;;6205:98;5921:392;;;;;;6320:241;;6424:2;6412:9;6403:7;6399:23;6395:32;6392:2;;;6440:1;6437;6430:12;6392:2;6475:1;6492:53;6537:7;6528:6;6517:9;6513:22;6492:53;;;6482:63;;6454:97;6386:175;;;;;6568:137;6667:32;6693:5;6667:32;;;6662:3;6655:45;6649:56;;;6712:113;6795:24;6813:5;6795:24;;;6790:3;6783:37;6777:48;;;6832:104;6909:21;6924:5;6909:21;;;6904:3;6897:34;6891:45;;;6943:343;;7053:38;7085:5;7053:38;;;7103:70;7166:6;7161:3;7103:70;;;7096:77;;7178:52;7223:6;7218:3;7211:4;7204:5;7200:16;7178:52;;;7251:29;7273:6;7251:29;;;7246:3;7242:39;7235:46;;7033:253;;;;;;7293:356;;7421:38;7453:5;7421:38;;;7471:88;7552:6;7547:3;7471:88;;;7464:95;;7564:52;7609:6;7604:3;7597:4;7590:5;7586:16;7564:52;;;7637:6;7632:3;7628:16;7621:23;;7401:248;;;;;;7656:347;;7768:39;7801:5;7768:39;;;7819:71;7883:6;7878:3;7819:71;;;7812:78;;7895:52;7940:6;7935:3;7928:4;7921:5;7917:16;7895:52;;;7968:29;7990:6;7968:29;;;7963:3;7959:39;7952:46;;7748:255;;;;;;8010:360;;8140:39;8173:5;8140:39;;;8191:89;8273:6;8268:3;8191:89;;;8184:96;;8285:52;8330:6;8325:3;8318:4;8311:5;8307:16;8285:52;;;8358:6;8353:3;8349:16;8342:23;;8120:250;;;;;;8402:884;;8539:5;8533:12;8573:1;8562:9;8558:17;8586:1;8581:268;;;;8860:1;8855:425;;;;8551:729;;8581:268;8659:4;8655:1;8644:9;8640:17;8636:28;8678:89;8760:6;8755:3;8678:89;;;8671:96;;8805:4;8801:9;8790;8786:25;8781:3;8774:38;8835:6;8830:3;8826:16;8819:23;;8588:261;8581:268;;8855:425;8924:1;8913:9;8909:17;8940:89;9022:6;9017:3;8940:89;;;8933:96;;9051:38;9083:5;9051:38;;;9105:1;9113:130;9127:6;9124:1;9121:13;9113:130;;;9192:7;9186:14;9182:1;9177:3;9173:11;9166:35;9233:1;9224:7;9220:15;9209:26;;9149:4;9146:1;9142:12;9137:17;;9113:130;;;9266:6;9261:3;9257:16;9250:23;;8862:418;;;8551:729;;8509:777;;;;;;9295:371;;9455:67;9519:2;9514:3;9455:67;;;9448:74;;9555:34;9551:1;9546:3;9542:11;9535:55;9624:4;9619:2;9614:3;9610:12;9603:26;9657:2;9652:3;9648:12;9641:19;;9441:225;;;;9675:323;;9835:67;9899:2;9894:3;9835:67;;;9828:74;;9935:25;9931:1;9926:3;9922:11;9915:46;9989:2;9984:3;9980:12;9973:19;;9821:177;;;;10007:387;;10167:67;10231:2;10226:3;10167:67;;;10160:74;;10267:34;10263:1;10258:3;10254:11;10247:55;10336:20;10331:2;10326:3;10322:12;10315:42;10385:2;10380:3;10376:12;10369:19;;10153:241;;;;10403:328;;10563:67;10627:2;10622:3;10563:67;;;10556:74;;10663:30;10659:1;10654:3;10650:11;10643:51;10722:2;10717:3;10713:12;10706:19;;10549:182;;;;10740:373;;10900:67;10964:2;10959:3;10900:67;;;10893:74;;11000:34;10996:1;10991:3;10987:11;10980:55;11069:6;11064:2;11059:3;11055:12;11048:28;11104:2;11099:3;11095:12;11088:19;;10886:227;;;;11122:325;;11282:67;11346:2;11341:3;11282:67;;;11275:74;;11382:27;11378:1;11373:3;11369:11;11362:48;11438:2;11433:3;11429:12;11422:19;;11268:179;;;;11456:320;;11616:67;11680:2;11675:3;11616:67;;;11609:74;;11716:22;11712:1;11707:3;11703:11;11696:43;11767:2;11762:3;11758:12;11751:19;;11602:174;;;;11785:381;;11945:67;12009:2;12004:3;11945:67;;;11938:74;;12045:34;12041:1;12036:3;12032:11;12025:55;12114:14;12109:2;12104:3;12100:12;12093:36;12157:2;12152:3;12148:12;12141:19;;11931:235;;;;12175:393;;12335:67;12399:2;12394:3;12335:67;;;12328:74;;12435:34;12431:1;12426:3;12422:11;12415:55;12504:26;12499:2;12494:3;12490:12;12483:48;12559:2;12554:3;12550:12;12543:19;;12321:247;;;;12577:379;;12737:67;12801:2;12796:3;12737:67;;;12730:74;;12837:34;12833:1;12828:3;12824:11;12817:55;12906:12;12901:2;12896:3;12892:12;12885:34;12947:2;12942:3;12938:12;12931:19;;12723:233;;;;12965:371;;13125:67;13189:2;13184:3;13125:67;;;13118:74;;13225:34;13221:1;13216:3;13212:11;13205:55;13294:4;13289:2;13284:3;13280:12;13273:26;13327:2;13322:3;13318:12;13311:19;;13111:225;;;;13345:332;;13505:67;13569:2;13564:3;13505:67;;;13498:74;;13605:34;13601:1;13596:3;13592:11;13585:55;13668:2;13663:3;13659:12;13652:19;;13491:186;;;;13686:381;;13846:67;13910:2;13905:3;13846:67;;;13839:74;;13946:34;13942:1;13937:3;13933:11;13926:55;14015:14;14010:2;14005:3;14001:12;13994:36;14058:2;14053:3;14049:12;14042:19;;13832:235;;;;14076:378;;14236:67;14300:2;14295:3;14236:67;;;14229:74;;14336:34;14332:1;14327:3;14323:11;14316:55;14405:11;14400:2;14395:3;14391:12;14384:33;14445:2;14440:3;14436:12;14429:19;;14222:232;;;;14463:384;;14623:67;14687:2;14682:3;14623:67;;;14616:74;;14723:34;14719:1;14714:3;14710:11;14703:55;14792:17;14787:2;14782:3;14778:12;14771:39;14838:2;14833:3;14829:12;14822:19;;14609:238;;;;14856:370;;15016:67;15080:2;15075:3;15016:67;;;15009:74;;15116:34;15112:1;15107:3;15103:11;15096:55;15185:3;15180:2;15175:3;15171:12;15164:25;15217:2;15212:3;15208:12;15201:19;;15002:224;;;;15235:386;;15395:67;15459:2;15454:3;15395:67;;;15388:74;;15495:34;15491:1;15486:3;15482:11;15475:55;15564:19;15559:2;15554:3;15550:12;15543:41;15612:2;15607:3;15603:12;15596:19;;15381:240;;;;15629:113;15712:24;15730:5;15712:24;;;15707:3;15700:37;15694:48;;;15749:271;;15902:93;15991:3;15982:6;15902:93;;;15895:100;;16012:3;16005:10;;15883:137;;;;;16027:275;;16182:95;16273:3;16264:6;16182:95;;;16175:102;;16294:3;16287:10;;16163:139;;;;;16309:430;;16509:92;16597:3;16588:6;16509:92;;;16502:99;;16619:95;16710:3;16701:6;16619:95;;;16612:102;;16731:3;16724:10;;16490:249;;;;;;16746:222;;16873:2;16862:9;16858:18;16850:26;;16887:71;16955:1;16944:9;16940:17;16931:6;16887:71;;;16844:124;;;;;16975:672;;17220:3;17209:9;17205:19;17197:27;;17235:87;17319:1;17308:9;17304:17;17295:6;17235:87;;;17333:72;17401:2;17390:9;17386:18;17377:6;17333:72;;;17416;17484:2;17473:9;17469:18;17460:6;17416:72;;;17536:9;17530:4;17526:20;17521:2;17510:9;17506:18;17499:48;17561:76;17632:4;17623:6;17561:76;;;17553:84;;17191:456;;;;;;;;17654:210;;17775:2;17764:9;17760:18;17752:26;;17789:65;17851:1;17840:9;17836:17;17827:6;17789:65;;;17746:118;;;;;17871:310;;18018:2;18007:9;18003:18;17995:26;;18068:9;18062:4;18058:20;18054:1;18043:9;18039:17;18032:47;18093:78;18166:4;18157:6;18093:78;;;18085:86;;17989:192;;;;;18188:520;;18385:2;18374:9;18370:18;18362:26;;18435:9;18429:4;18425:20;18421:1;18410:9;18406:17;18399:47;18460:78;18533:4;18524:6;18460:78;;;18452:86;;18549:72;18617:2;18606:9;18602:18;18593:6;18549:72;;;18632:66;18694:2;18683:9;18679:18;18670:6;18632:66;;;18356:352;;;;;;;18715:416;;18915:2;18904:9;18900:18;18892:26;;18965:9;18959:4;18955:20;18951:1;18940:9;18936:17;18929:47;18990:131;19116:4;18990:131;;;18982:139;;18886:245;;;;19138:416;;19338:2;19327:9;19323:18;19315:26;;19388:9;19382:4;19378:20;19374:1;19363:9;19359:17;19352:47;19413:131;19539:4;19413:131;;;19405:139;;19309:245;;;;19561:416;;19761:2;19750:9;19746:18;19738:26;;19811:9;19805:4;19801:20;19797:1;19786:9;19782:17;19775:47;19836:131;19962:4;19836:131;;;19828:139;;19732:245;;;;19984:416;;20184:2;20173:9;20169:18;20161:26;;20234:9;20228:4;20224:20;20220:1;20209:9;20205:17;20198:47;20259:131;20385:4;20259:131;;;20251:139;;20155:245;;;;20407:416;;20607:2;20596:9;20592:18;20584:26;;20657:9;20651:4;20647:20;20643:1;20632:9;20628:17;20621:47;20682:131;20808:4;20682:131;;;20674:139;;20578:245;;;;20830:416;;21030:2;21019:9;21015:18;21007:26;;21080:9;21074:4;21070:20;21066:1;21055:9;21051:17;21044:47;21105:131;21231:4;21105:131;;;21097:139;;21001:245;;;;21253:416;;21453:2;21442:9;21438:18;21430:26;;21503:9;21497:4;21493:20;21489:1;21478:9;21474:17;21467:47;21528:131;21654:4;21528:131;;;21520:139;;21424:245;;;;21676:416;;21876:2;21865:9;21861:18;21853:26;;21926:9;21920:4;21916:20;21912:1;21901:9;21897:17;21890:47;21951:131;22077:4;21951:131;;;21943:139;;21847:245;;;;22099:416;;22299:2;22288:9;22284:18;22276:26;;22349:9;22343:4;22339:20;22335:1;22324:9;22320:17;22313:47;22374:131;22500:4;22374:131;;;22366:139;;22270:245;;;;22522:416;;22722:2;22711:9;22707:18;22699:26;;22772:9;22766:4;22762:20;22758:1;22747:9;22743:17;22736:47;22797:131;22923:4;22797:131;;;22789:139;;22693:245;;;;22945:416;;23145:2;23134:9;23130:18;23122:26;;23195:9;23189:4;23185:20;23181:1;23170:9;23166:17;23159:47;23220:131;23346:4;23220:131;;;23212:139;;23116:245;;;;23368:416;;23568:2;23557:9;23553:18;23545:26;;23618:9;23612:4;23608:20;23604:1;23593:9;23589:17;23582:47;23643:131;23769:4;23643:131;;;23635:139;;23539:245;;;;23791:416;;23991:2;23980:9;23976:18;23968:26;;24041:9;24035:4;24031:20;24027:1;24016:9;24012:17;24005:47;24066:131;24192:4;24066:131;;;24058:139;;23962:245;;;;24214:416;;24414:2;24403:9;24399:18;24391:26;;24464:9;24458:4;24454:20;24450:1;24439:9;24435:17;24428:47;24489:131;24615:4;24489:131;;;24481:139;;24385:245;;;;24637:416;;24837:2;24826:9;24822:18;24814:26;;24887:9;24881:4;24877:20;24873:1;24862:9;24858:17;24851:47;24912:131;25038:4;24912:131;;;24904:139;;24808:245;;;;25060:416;;25260:2;25249:9;25245:18;25237:26;;25310:9;25304:4;25300:20;25296:1;25285:9;25281:17;25274:47;25335:131;25461:4;25335:131;;;25327:139;;25231:245;;;;25483:416;;25683:2;25672:9;25668:18;25660:26;;25733:9;25727:4;25723:20;25719:1;25708:9;25704:17;25697:47;25758:131;25884:4;25758:131;;;25750:139;;25654:245;;;;25906:222;;26033:2;26022:9;26018:18;26010:26;;26047:71;26115:1;26104:9;26100:17;26091:6;26047:71;;;26004:124;;;;;26135:256;;26197:2;26191:9;26181:19;;26235:4;26227:6;26223:17;26334:6;26322:10;26319:22;26298:18;26286:10;26283:34;26280:62;26277:2;;;26355:1;26352;26345:12;26277:2;26375:10;26371:2;26364:22;26175:216;;;;;26398:321;;26541:18;26533:6;26530:30;26527:2;;;26573:1;26570;26563:12;26527:2;26640:4;26636:9;26629:4;26621:6;26617:17;26613:33;26605:41;;26704:4;26698;26694:15;26686:23;;26464:255;;;;26726:322;;26870:18;26862:6;26859:30;26856:2;;;26902:1;26899;26892:12;26856:2;26969:4;26965:9;26958:4;26950:6;26946:17;26942:33;26934:41;;27033:4;27027;27023:15;27015:23;;26793:255;;;;27055:158;;27123:3;27115:11;;27160:3;27157:1;27150:14;27192:4;27189:1;27179:18;27171:26;;27109:104;;;;27220:121;;27313:5;27307:12;27297:22;;27278:63;;;;27348:122;;27442:5;27436:12;27426:22;;27407:63;;;;27478:162;;27592:6;27587:3;27580:19;27629:4;27624:3;27620:14;27605:29;;27573:67;;;;;27649:144;;27784:3;27769:18;;27762:31;;;;;27802:163;;27917:6;27912:3;27905:19;27954:4;27949:3;27945:14;27930:29;;27898:67;;;;;27974:145;;28110:3;28095:18;;28088:31;;;;;28127:91;;28189:24;28207:5;28189:24;;;28178:35;;28172:46;;;;28225:99;;28295:24;28313:5;28295:24;;;28284:35;;28278:46;;;;28331:85;;28404:5;28397:13;28390:21;28379:32;;28373:43;;;;28423:144;;28495:66;28488:5;28484:78;28473:89;;28467:100;;;;28574:121;;28647:42;28640:5;28636:54;28625:65;;28619:76;;;;28702:72;;28764:5;28753:16;;28747:27;;;;28782:145;28863:6;28858:3;28853;28840:30;28919:1;28910:6;28905:3;28901:16;28894:27;28833:94;;;;28936:268;29001:1;29008:101;29022:6;29019:1;29016:13;29008:101;;;29098:1;29093:3;29089:11;29083:18;29079:1;29074:3;29070:11;29063:39;29044:2;29041:1;29037:10;29032:15;;29008:101;;;29124:6;29121:1;29118:13;29115:2;;;29189:1;29180:6;29175:3;29171:16;29164:27;29115:2;28985:219;;;;;29212:97;;29300:2;29296:7;29291:2;29284:5;29280:14;29276:28;29266:38;;29260:49;;;;29317:117;29386:24;29404:5;29386:24;;;29379:5;29376:35;29366:2;;29425:1;29422;29415:12;29366:2;29360:74;;29441:111;29507:21;29522:5;29507:21;;;29500:5;29497:32;29487:2;;29543:1;29540;29533:12;29487:2;29481:71;;29559:115;29627:23;29644:5;29627:23;;;29620:5;29617:34;29607:2;;29665:1;29662;29655:12;29607:2;29601:73;;29681:117;29750:24;29768:5;29750:24;;;29743:5;29740:35;29730:2;;29789:1;29786;29779:12;29730:2;29724:74;",
  "source": "\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./ERC721.sol\";\r\n\r\ncontract photoToken is ERC721 {\r\n\r\n\tstruct Photo\r\n\t{\r\n        string photo_id;\r\n        uint size;\r\n        bool originality;\r\n\t}\r\n\r\n\tPhoto[] public photos;\r\n\r\n\tmapping(string => bool) _photoExists;\r\n\r\n\tconstructor () ERC721(\"Photo\",\"PIC\") public {\r\n\t}\r\n\r\n\tfunction mint(Photo memory _photo) public {\r\n\t\trequire(_photoExists[_photo.photo_id] == false, \"photo_id already exists\");\r\n\t\tphotos.push(_photo);\r\n\t\tuint _id = photos.length - 1;\r\n\t\t_photoExists[_photo.photo_id] = true;\r\n\t\t_mint(msg.sender, _id);\r\n\t}\r\n\r\n\tfunction look_up(Photo memory _photo) public pure returns(uint) {\r\n        uint value = 0;\r\n        if (_photo.size >= 0 && _photo.size <= 10) {value = 50;}\r\n        else if (_photo.size > 10 && _photo.size <= 20) {value = 100;}\r\n        else if (_photo.size > 20 ) {value = 200;}\r\n        else value = 0;\r\n        if (_photo.originality == true) {value = value * 2;}\r\n        return value;\r\n    }\r\n\r\n    function exchange(Photo memory _photo,uint _amount) public payable returns(bool){\r\n        uint requiredValue = look_up(_photo);\r\n        require(_amount==requiredValue,\"Incorrect value sent\");\r\n        \r\n    }\r\n\r\n}",
  "sourcePath": "Z:\\BD\\Smart Contract Essentials\\assignment\\trial2\\contracts\\photo_base.sol",
  "ast": {
    "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol",
    "exportedSymbols": {
      "photoToken": [
        2626
      ]
    },
    "id": 2627,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2464,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "id": 2465,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "62:33:2"
      },
      {
        "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2466,
        "nodeType": "ImportDirective",
        "scope": 2627,
        "sourceUnit": 2406,
        "src": "99:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2467,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2405,
              "src": "148:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2405",
                "typeString": "contract ERC721"
              }
            },
            "id": 2468,
            "nodeType": "InheritanceSpecifier",
            "src": "148:6:2"
          }
        ],
        "contractDependencies": [
          26,
          37,
          151,
          176,
          205,
          277,
          2405
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2626,
        "linearizedBaseContracts": [
          2626,
          2405,
          205,
          176,
          151,
          277,
          37,
          26
        ],
        "name": "photoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "photoToken.Photo",
            "id": 2475,
            "members": [
              {
                "constant": false,
                "id": 2470,
                "mutability": "mutable",
                "name": "photo_id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2475,
                "src": "187:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2469,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2472,
                "mutability": "mutable",
                "name": "size",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2475,
                "src": "213:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2471,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "213:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2474,
                "mutability": "mutable",
                "name": "originality",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2475,
                "src": "233:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2473,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Photo",
            "nodeType": "StructDefinition",
            "scope": 2626,
            "src": "161:93:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af2a5d6f",
            "id": 2478,
            "mutability": "mutable",
            "name": "photos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "259:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage",
              "typeString": "struct photoToken.Photo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2476,
                "name": "Photo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2475,
                "src": "259:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                  "typeString": "struct photoToken.Photo"
                }
              },
              "id": 2477,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "259:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage_ptr",
                "typeString": "struct photoToken.Photo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2482,
            "mutability": "mutable",
            "name": "_photoExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "286:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 2481,
              "keyType": {
                "id": 2479,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "294:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "286:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 2480,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "304:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "372:5:2",
              "statements": []
            },
            "documentation": null,
            "id": 2490,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50686f746f",
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "350:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0cd4a4bc081385231480fe39157001287f8cda715836354d304edf2543a7010b",
                      "typeString": "literal_string \"Photo\""
                    },
                    "value": "Photo"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "504943",
                    "id": 2486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "358:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6b749f7c8e1e83206ed83ad2813cfac0d13231da4ab361317f917e1e907b947e",
                      "typeString": "literal_string \"PIC\""
                    },
                    "value": "PIC"
                  }
                ],
                "id": 2487,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2484,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2405,
                  "src": "343:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2405_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "343:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:2:2"
            },
            "returnParameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:0:2"
            },
            "scope": 2626,
            "src": "328:49:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2531,
              "nodeType": "Block",
              "src": "424:209:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2496,
                            "name": "_photoExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2482,
                            "src": "437:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 2499,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2497,
                              "name": "_photo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "450:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                                "typeString": "struct photoToken.Photo memory"
                              }
                            },
                            "id": 2498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "photo_id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "450:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "437:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "470:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "437:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70686f746f5f696420616c726561647920657869737473",
                        "id": 2502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "477:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        },
                        "value": "photo_id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        }
                      ],
                      "id": 2495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "429:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2504,
                  "nodeType": "ExpressionStatement",
                  "src": "429:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2508,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "520:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2505,
                        "name": "photos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2478,
                        "src": "508:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage",
                          "typeString": "struct photoToken.Photo storage ref[] storage ref"
                        }
                      },
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "508:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Photo_$2475_storage_$returns$__$",
                        "typeString": "function (struct photoToken.Photo storage ref)"
                      }
                    },
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "508:19:2"
                },
                {
                  "assignments": [
                    2512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2512,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2531,
                      "src": "532:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2511,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "532:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2517,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2513,
                        "name": "photos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2478,
                        "src": "543:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage",
                          "typeString": "struct photoToken.Photo storage ref[] storage ref"
                        }
                      },
                      "id": 2514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "543:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "559:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "543:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "532:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2518,
                        "name": "_photoExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "565:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 2521,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2519,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2492,
                          "src": "578:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "578:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "565:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "597:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "565:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2524,
                  "nodeType": "ExpressionStatement",
                  "src": "565:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2528,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2512,
                        "src": "624:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2525,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "606:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "606:22:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e8cc1085",
            "id": 2532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2492,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2532,
                  "src": "396:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2491,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2475,
                    "src": "396:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:21:2"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:2"
            },
            "scope": 2626,
            "src": "382:251:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "702:333:2",
              "statements": [
                {
                  "assignments": [
                    2540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2540,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2601,
                      "src": "713:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2539,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "713:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2542,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "726:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "713:14:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2543,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2534,
                          "src": "742:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2544,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2472,
                        "src": "742:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "742:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2547,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2534,
                          "src": "762:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2472,
                        "src": "762:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "777:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "762:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "742:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2557,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "813:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2558,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "813:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "827:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "813:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2561,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "833:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2562,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "833:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "848:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "833:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "813:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2571,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "885:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2572,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "885:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "899:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "885:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2580,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "933:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "941:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "933:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2583,
                        "nodeType": "ExpressionStatement",
                        "src": "933:9:2"
                      },
                      "id": 2584,
                      "nodeType": "IfStatement",
                      "src": "881:61:2",
                      "trueBody": {
                        "id": 2579,
                        "nodeType": "Block",
                        "src": "904:14:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 2575,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2540,
                                "src": "905:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "323030",
                                "id": 2576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "913:3:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "905:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2578,
                            "nodeType": "ExpressionStatement",
                            "src": "905:11:2"
                          }
                        ]
                      }
                    },
                    "id": 2585,
                    "nodeType": "IfStatement",
                    "src": "809:133:2",
                    "trueBody": {
                      "id": 2570,
                      "nodeType": "Block",
                      "src": "852:14:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 2566,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "853:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 2567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "861:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "853:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2569,
                          "nodeType": "ExpressionStatement",
                          "src": "853:11:2"
                        }
                      ]
                    }
                  },
                  "id": 2586,
                  "nodeType": "IfStatement",
                  "src": "738:204:2",
                  "trueBody": {
                    "id": 2556,
                    "nodeType": "Block",
                    "src": "781:13:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2552,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "782:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3530",
                            "id": 2553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "790:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "782:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2555,
                        "nodeType": "ExpressionStatement",
                        "src": "782:10:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2587,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "957:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      },
                      "id": 2588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "originality",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2474,
                      "src": "957:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "957:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2598,
                  "nodeType": "IfStatement",
                  "src": "953:52:2",
                  "trueBody": {
                    "id": 2597,
                    "nodeType": "Block",
                    "src": "985:20:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2591,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "986:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2592,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "994:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1002:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "994:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "986:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2596,
                        "nodeType": "ExpressionStatement",
                        "src": "986:17:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2540,
                    "src": "1022:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2538,
                  "id": 2600,
                  "nodeType": "Return",
                  "src": "1015:12:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9a4f824c",
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "look_up",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2534,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2602,
                  "src": "655:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2533,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2475,
                    "src": "655:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:21:2"
            },
            "returnParameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2602,
                  "src": "696:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "695:6:2"
            },
            "scope": 2626,
            "src": "638:397:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2624,
              "nodeType": "Block",
              "src": "1123:130:2",
              "statements": [
                {
                  "assignments": [
                    2612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2612,
                      "mutability": "mutable",
                      "name": "requiredValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2624,
                      "src": "1134:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2611,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1134:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2616,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2614,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2604,
                        "src": "1163:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "id": 2613,
                      "name": "look_up",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2602,
                      "src": "1155:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Photo_$2475_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct photoToken.Photo memory) pure returns (uint256)"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1134:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2618,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2606,
                          "src": "1189:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2619,
                          "name": "requiredValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2612,
                          "src": "1198:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1189:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f72726563742076616c75652073656e74",
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1212:22:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        },
                        "value": "Incorrect value sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        }
                      ],
                      "id": 2617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1181:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2623,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:54:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aeaf4f57",
            "id": 2625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "1061:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2603,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2475,
                    "src": "1061:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "1081:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1060:34:2"
            },
            "returnParameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "1118:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:6:2"
            },
            "scope": 2626,
            "src": "1043:210:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2627,
        "src": "125:1133:2"
      }
    ],
    "src": "37:1221:2"
  },
  "legacyAST": {
    "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/photo_base.sol",
    "exportedSymbols": {
      "photoToken": [
        2626
      ]
    },
    "id": 2627,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2464,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "id": 2465,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "62:33:2"
      },
      {
        "absolutePath": "/Z/BD/Smart Contract Essentials/assignment/trial2/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2466,
        "nodeType": "ImportDirective",
        "scope": 2627,
        "sourceUnit": 2406,
        "src": "99:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2467,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2405,
              "src": "148:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2405",
                "typeString": "contract ERC721"
              }
            },
            "id": 2468,
            "nodeType": "InheritanceSpecifier",
            "src": "148:6:2"
          }
        ],
        "contractDependencies": [
          26,
          37,
          151,
          176,
          205,
          277,
          2405
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2626,
        "linearizedBaseContracts": [
          2626,
          2405,
          205,
          176,
          151,
          277,
          37,
          26
        ],
        "name": "photoToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "photoToken.Photo",
            "id": 2475,
            "members": [
              {
                "constant": false,
                "id": 2470,
                "mutability": "mutable",
                "name": "photo_id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2475,
                "src": "187:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2469,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2472,
                "mutability": "mutable",
                "name": "size",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2475,
                "src": "213:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2471,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "213:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2474,
                "mutability": "mutable",
                "name": "originality",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2475,
                "src": "233:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2473,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Photo",
            "nodeType": "StructDefinition",
            "scope": 2626,
            "src": "161:93:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af2a5d6f",
            "id": 2478,
            "mutability": "mutable",
            "name": "photos",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "259:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage",
              "typeString": "struct photoToken.Photo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2476,
                "name": "Photo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2475,
                "src": "259:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                  "typeString": "struct photoToken.Photo"
                }
              },
              "id": 2477,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "259:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage_ptr",
                "typeString": "struct photoToken.Photo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2482,
            "mutability": "mutable",
            "name": "_photoExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2626,
            "src": "286:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 2481,
              "keyType": {
                "id": 2479,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "294:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "286:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 2480,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "304:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "372:5:2",
              "statements": []
            },
            "documentation": null,
            "id": 2490,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50686f746f",
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "350:7:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0cd4a4bc081385231480fe39157001287f8cda715836354d304edf2543a7010b",
                      "typeString": "literal_string \"Photo\""
                    },
                    "value": "Photo"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "504943",
                    "id": 2486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "358:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6b749f7c8e1e83206ed83ad2813cfac0d13231da4ab361317f917e1e907b947e",
                      "typeString": "literal_string \"PIC\""
                    },
                    "value": "PIC"
                  }
                ],
                "id": 2487,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2484,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2405,
                  "src": "343:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2405_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "343:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:2:2"
            },
            "returnParameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:0:2"
            },
            "scope": 2626,
            "src": "328:49:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2531,
              "nodeType": "Block",
              "src": "424:209:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2496,
                            "name": "_photoExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2482,
                            "src": "437:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 2499,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2497,
                              "name": "_photo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "450:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                                "typeString": "struct photoToken.Photo memory"
                              }
                            },
                            "id": 2498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "photo_id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2470,
                            "src": "450:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "437:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "470:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "437:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70686f746f5f696420616c726561647920657869737473",
                        "id": 2502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "477:25:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        },
                        "value": "photo_id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a953a84e859cb467ae7849ea9e3f08c82bbe0cd25b244102faad7f3e8c92919",
                          "typeString": "literal_string \"photo_id already exists\""
                        }
                      ],
                      "id": 2495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "429:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "429:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2504,
                  "nodeType": "ExpressionStatement",
                  "src": "429:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2508,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "520:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2505,
                        "name": "photos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2478,
                        "src": "508:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage",
                          "typeString": "struct photoToken.Photo storage ref[] storage ref"
                        }
                      },
                      "id": 2507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "508:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Photo_$2475_storage_$returns$__$",
                        "typeString": "function (struct photoToken.Photo storage ref)"
                      }
                    },
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "508:19:2"
                },
                {
                  "assignments": [
                    2512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2512,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2531,
                      "src": "532:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2511,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "532:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2517,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2513,
                        "name": "photos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2478,
                        "src": "543:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Photo_$2475_storage_$dyn_storage",
                          "typeString": "struct photoToken.Photo storage ref[] storage ref"
                        }
                      },
                      "id": 2514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "543:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "559:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "543:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "532:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2518,
                        "name": "_photoExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "565:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 2521,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2519,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2492,
                          "src": "578:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photo_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2470,
                        "src": "578:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "565:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "597:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "565:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2524,
                  "nodeType": "ExpressionStatement",
                  "src": "565:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "612:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "612:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2528,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2512,
                        "src": "624:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2525,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2123,
                      "src": "606:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "606:22:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e8cc1085",
            "id": 2532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2492,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2532,
                  "src": "396:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2491,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2475,
                    "src": "396:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:21:2"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:2"
            },
            "scope": 2626,
            "src": "382:251:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2601,
              "nodeType": "Block",
              "src": "702:333:2",
              "statements": [
                {
                  "assignments": [
                    2540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2540,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2601,
                      "src": "713:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2539,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "713:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2542,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "726:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "713:14:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2543,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2534,
                          "src": "742:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2544,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2472,
                        "src": "742:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "742:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2547,
                          "name": "_photo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2534,
                          "src": "762:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                            "typeString": "struct photoToken.Photo memory"
                          }
                        },
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2472,
                        "src": "762:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "777:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "762:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "742:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2557,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "813:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2558,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "813:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 2559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "827:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "813:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2561,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "833:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2562,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "833:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "848:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "833:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "813:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2571,
                            "name": "_photo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2534,
                            "src": "885:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                              "typeString": "struct photoToken.Photo memory"
                            }
                          },
                          "id": 2572,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "size",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "885:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 2573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "899:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "885:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2580,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "933:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "941:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "933:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2583,
                        "nodeType": "ExpressionStatement",
                        "src": "933:9:2"
                      },
                      "id": 2584,
                      "nodeType": "IfStatement",
                      "src": "881:61:2",
                      "trueBody": {
                        "id": 2579,
                        "nodeType": "Block",
                        "src": "904:14:2",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 2577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "id": 2575,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2540,
                                "src": "905:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "hexValue": "323030",
                                "id": 2576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "913:3:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "905:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2578,
                            "nodeType": "ExpressionStatement",
                            "src": "905:11:2"
                          }
                        ]
                      }
                    },
                    "id": 2585,
                    "nodeType": "IfStatement",
                    "src": "809:133:2",
                    "trueBody": {
                      "id": 2570,
                      "nodeType": "Block",
                      "src": "852:14:2",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 2566,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "853:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 2567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "861:3:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "853:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2569,
                          "nodeType": "ExpressionStatement",
                          "src": "853:11:2"
                        }
                      ]
                    }
                  },
                  "id": 2586,
                  "nodeType": "IfStatement",
                  "src": "738:204:2",
                  "trueBody": {
                    "id": 2556,
                    "nodeType": "Block",
                    "src": "781:13:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2552,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "782:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3530",
                            "id": 2553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "790:2:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "782:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2555,
                        "nodeType": "ExpressionStatement",
                        "src": "782:10:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2587,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "957:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      },
                      "id": 2588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "originality",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2474,
                      "src": "957:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "957:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2598,
                  "nodeType": "IfStatement",
                  "src": "953:52:2",
                  "trueBody": {
                    "id": 2597,
                    "nodeType": "Block",
                    "src": "985:20:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2591,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "986:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2592,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2540,
                              "src": "994:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1002:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "994:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "986:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2596,
                        "nodeType": "ExpressionStatement",
                        "src": "986:17:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2599,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2540,
                    "src": "1022:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2538,
                  "id": 2600,
                  "nodeType": "Return",
                  "src": "1015:12:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9a4f824c",
            "id": 2602,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "look_up",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2534,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2602,
                  "src": "655:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2533,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2475,
                    "src": "655:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:21:2"
            },
            "returnParameters": {
              "id": 2538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2602,
                  "src": "696:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2536,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "695:6:2"
            },
            "scope": 2626,
            "src": "638:397:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2624,
              "nodeType": "Block",
              "src": "1123:130:2",
              "statements": [
                {
                  "assignments": [
                    2612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2612,
                      "mutability": "mutable",
                      "name": "requiredValue",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2624,
                      "src": "1134:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2611,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1134:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2616,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2614,
                        "name": "_photo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2604,
                        "src": "1163:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                          "typeString": "struct photoToken.Photo memory"
                        }
                      ],
                      "id": 2613,
                      "name": "look_up",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2602,
                      "src": "1155:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Photo_$2475_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct photoToken.Photo memory) pure returns (uint256)"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1134:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2618,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2606,
                          "src": "1189:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2619,
                          "name": "requiredValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2612,
                          "src": "1198:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1189:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f72726563742076616c75652073656e74",
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1212:22:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        },
                        "value": "Incorrect value sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
                          "typeString": "literal_string \"Incorrect value sent\""
                        }
                      ],
                      "id": 2617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1181:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2623,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:54:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aeaf4f57",
            "id": 2625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "_photo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "1061:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Photo_$2475_memory_ptr",
                    "typeString": "struct photoToken.Photo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2603,
                    "name": "Photo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2475,
                    "src": "1061:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Photo_$2475_storage_ptr",
                      "typeString": "struct photoToken.Photo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "1081:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1060:34:2"
            },
            "returnParameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2625,
                  "src": "1118:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:6:2"
            },
            "scope": 2626,
            "src": "1043:210:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2627,
        "src": "125:1133:2"
      }
    ],
    "src": "37:1221:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.9+commit.3e3065ac.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-06-08T20:24:18.774Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |=== Requirements: - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}